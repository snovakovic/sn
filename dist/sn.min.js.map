{"version":3,"sources":["sn.js","sn.end.js","sn.array.js","sn.assert.js","sn.date.js","sn.function.js","sn.object.js","sn.string.js"],"names":["global","factory","exports","module","define","amd","sn","this","executionContext","__EC__","each","callback","i","l","length","call","iterate","remove","elToRemove","max","pos","indexOf","lastIndexOf","splice","shuffle","temporaryValue","randomIndex","currentIndex","Math","floor","random","getFilledArray","val","len","rv","Array","unique","originalArr","arr","push","first","condition","last","stackQueueBase","baseArray","_arr","__array__","add","isArray","prototype","apply","stack","defaultArray","pop","peek","queue","shift","internals","isString","testVar","isNumber","isDate","Object","toString","assert","assertMessage","TypeError","is","t2","t1","empty","test","key","hasOwnProperty","string","number","boolean","null","undefined","defined","object","function","array","date","not","prop","getDate","Date","setLastDayOfMonth","dt","setMonth","getMonth","lastDayOfMonth","getTime","setDate","getLastDayOfMonth","getFullYear","addMilliseconds","milliseconds","setMilliseconds","getMilliseconds","addSeconds","seconds","setSeconds","getSeconds","addMinutes","minutes","setMinutes","getMinutes","addHours","hours","setHours","getHours","addDays","days","addMonths","months","addYears","years","setFullYear","getMonths","index","month","name","shortName","once","fn","result","arguments","debounce","wait","timeout","callNow","clearTimeout","setTimeout","execute","executeFn","executer","conditionFn","maxTicks","tick","isNaN","bind","when","conditionFb","_tick","_maxTicks","subscribers","broadcast","to","callArguments","slice","listen","subscribe","cb","deepSealOrFreez","obj","action","getOwnPropertyNames","forEach","isSealed","deepFreez","freez","deepSeal","seal","extend","replaceAll","whatToReplace","replaceWith","replace","RegExp","capitalize","toUpperCase","contains","substring","ignoreCase","toLowerCase","chop","step","String","match","clean","trim","truncate","appender","between","startStr","endStr","startIndex","endIndex","substr"],"mappings":"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","file":"sn.min.js","sourcesContent":["/*****************************************************\n\t  s.js https://github.com/snovakovic/s.js\n    author: stefan.novakovich@gmail.com\n    version: 0.0.1\n ***************************************************/\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n      (global.sn = factory());\n} (this, (function () {\n\n  'use strict';\n\n  var __EC__; //execution context\n\n  function sn(executionContext) {\n    __EC__ = executionContext;\n    return sn;\n  }\n\n  //app files will be concatenated here and then this will be closed with sn.end.js\n\n","  return sn;\r\n})));\r\n","(function (sn) {\n\n  //PRIVATE\n\n  //PUBLIC\n\n  /**********************************************\n  * Loop over array. this in callback function will ber set to array.\n  * @param arr {Array} array we want to iterate\n  * @param callback {Function} callback function that will be called on each iteration\n  ************************************************/\n  sn.each = function (callback) {\n    for (var i = 0, l = __EC__.length; i < l; i++) {\n      if (callback.call(__EC__, __EC__[i], i) === false) {\n        break;\n      }\n    }\n    return sn;\n  };\n\n\n  /**********************************************\n  * Iterate specific number of times.\n  * @param l {Number} number of times we want to iterate\n  * @param callback {Function} callback function that will be called on each iteration\n  ************************************************/\n  sn.iterate = function (l, callback) {\n    for (var i = 0; i < l; i++) {\n      if (callback.call(null, i) === false) {\n        break;\n      }\n    }\n  };\n\n\n  /***********************************************\n  * Remove all occurrences of element from array\n  * @param arr {Array} array from where we want  to remove values\n  * @param elToRemove {...} element that we want to remove from array\n  * @param max {whole number integer} max number of occurrences to remove. 1 - remove first, -1 remove last.\n  * @return {Array} new array without removed values\n  ***********************************************/\n  sn.remove = function (elToRemove, max) {\n    var pos;\n\n    while (pos !== -1 && max !== 0) {\n      if (max) {\n        if (max >= 1) {\n          pos = __EC__.indexOf(elToRemove);\n          max--;\n        } else {\n          pos = __EC__.lastIndexOf(elToRemove);\n          max++;\n        }\n\n      } else {\n        pos = __EC__.indexOf(elToRemove);\n      }\n\n      pos > -1 && __EC__.splice(pos, 1);\n    }\n\n    return __EC__;\n  };\n\n\n  /*******************************************************\n  * Shuffle values in the array\n  * https://github.com/Daplie/knuth-shuffle\n  * @param arr {Array} input array that we want to shuffle\n  * @return {Array} shuffled array\n  ********************************************************/\n  sn.shuffle = function () {\n    var currentIndex = __EC__.length;\n    var temporaryValue;\n    var randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = __EC__[currentIndex];\n      __EC__[currentIndex] = __EC__[randomIndex];\n      __EC__[randomIndex] = temporaryValue;\n    }\n\n    return __EC__;\n  };\n\n\n  /*********************************************\n  * Get the new array filled with default values\n  * @param val {Any} default array value\n  * @return len {Integer} size of the new array\n  **********************************************/\n  sn.getFilledArray = function (val, len) {\n    var rv = new Array(len);\n    while (--len >= 0) {\n      rv[len] = val;\n    }\n    return rv;\n  };\n\n\n  /*************************************************\n  * Returns new array containing only unique values from original array\n  * Doesn't support nested objects and array\n  * @param originalArr {Array} array form where we want to remove duplicate values\n  * @return array without duplicate values\n  ***********************************************/\n  sn.unique = function (originalArr) {\n    var arr = [];\n    for (var i = 0; i < originalArr.length; i++) {\n      if (arr.indexOf(originalArr[i]) === -1) {\n        arr.push(originalArr[i]);\n      }\n    }\n    return arr;\n  };\n\n\n  /********************************************s\n  * Returns first element of array if no condition is passed,\n  * else if there is condition returns first element of array that meets condition\n  * @param arr {Array} array we want to search in for value\n  * @param condition {Function} function that returns true if value is found.\n  * @return array item if found or undefined if not found\n  **********************************************/\n  sn.first = function (arr, condition) {\n    if (arr && arr.length) {\n      if (condition) {\n        for (var i = 0; i < arr.length; i++) {\n          if (condition(arr[i])) {\n            return arr[i];\n          }\n        }\n      } else {\n        return arr[0];\n      }\n    }\n\n    return undefined;\n\n  };\n\n  /**********************************************************\n  * Returns last element of array if no condition is passed,\n  * else if there is condition returns last element of array that meets condition\n  * @param arr {Array} [optional] array we want to search in for value\n  * @param condition {Function} function that returns true if value is found.\n  * @return array item if found or undefined if not found\n  ***********************************************************/\n  sn.last = function (arr, condition) {\n    if (arr && arr.length) {\n      if (condition) {\n        for (var i = arr.length - 1; i >= 0; i--) {\n          if (condition(arr[i])) {\n            return arr[i];\n          }\n        }\n      } else {\n        return arr[arr.length - 1];\n      }\n    }\n\n    return undefined;\n\n  };\n\n  //Stack && Queue implementation\n  (function (sn) {\n\n    var stackQueueBase = function (baseArray) {\n      var _arr = this.__array__ = baseArray || [];\n\n      this.add = function (val) {\n        Array.isArray(val)\n          ? Array.prototype.push.apply(_arr, val)\n          : _arr.push(val);\n      };\n\n      this.length = function () {\n        return _arr.length;\n      };\n\n      return this;\n\n    };\n\n\n    /*********************************************\n     * Stack implementation LIFO last in first out\n     * @param defaultArray [optional] {Array} default array that will be used as a stack base\n    *********************************************/\n    sn.stack = function (defaultArray) {\n      var stack = new stackQueueBase(defaultArray);\n      stack.remove = function () {\n        var _arr = this.__array__;\n        return _arr.length ? _arr.pop() : null;\n      };\n      stack.peek = function () {\n        var _arr = this.__array__;\n        return _arr.length ? _arr[_arr.length - 1] : null;\n      };\n\n      return stack;\n    };\n\n\n    /*********************************************\n    * Queue implementation FIFO: first in first out\n    * @param defaultArray [optional] {Array} default array that will be used as a queue base\n    *********************************************/\n    sn.queue = function (defaultArray) {\n      var queue = new stackQueueBase(defaultArray);\n      queue.remove = function () {\n        var _arr = this.__array__;\n        return _arr.length ? _arr.shift() : null;\n      };\n      queue.peek = function () {\n        var _arr = this.__array__;\n        return _arr.length ? _arr[0] : null;\n      };\n\n      return queue;\n    };\n\n  })(sn);\n\n\n})(sn);\n","(function (sn) {\n\n  var internals = {\n    isString: function (testVar) {\n      return typeof testVar === 'string';\n    },\n    isNumber: function (testVar) {\n      //NaN will produce false because NaN !== NaN\n      return typeof testVar === 'number' && testVar === testVar;\n    },\n    isDate: function (testVar) {\n      return Object.prototype.toString.call(testVar) === '[object Date]';\n    },\n    assert: function (val, assertMessage) {\n      if (val) {\n        return val;\n      }\n      throw new TypeError(assertMessage);\n    }\n\n  };\n\n\n  //PUBLIC\n\n  /****************************************\n  * Safely check if two variables are the same without JS coercion gotchas\n  * == is used when comparing string and numbers (with exception for emptySting == 0 which is false as it should be)\n  * == is used for compering null and undefined\n  * for everything else === is used.\n  * ********************************* */\n  sn.is = function (t2) {\n    var t1 = __EC__;\n    if ((internals.isString(t1) || internals.isNumber(t1)) && (internals.isString(t2) || internals.isNumber(t2))) {\n      //this covers coercion between string and number without any gotchas\n      return (typeof t1 === typeof t2)\n        ? t1 === t2\n        : t1 == t2 && t1 !== '' && t2 !== '';\n\n    } else if (t1 == null && t2 == null) {\n      //This covers when vars are either null or undefined without any gotchas\n      return true;\n    }\n\n    return t1 === t2;\n\n  };\n\n\n  /****************************************************\n   * Test if variable has been defined and is not empty,\n   * Following will be treated as false\n   * sn(null).is.empty(); => true\n   * sn(undefined).is.empty(); => true\n   * sn({}).is.empty(); => true\n   * sn([]).is.empty(); => true\n   * sn(' ').is.empty(); => true\n   * sn('\\n\\t').is.empty(); => true\n  ********************************************************/\n  sn.is.empty = function () {\n    if (__EC__ == null\n      || (typeof __EC__ === 'string' && (/^\\s*$/).test(__EC__))) {\n      return true;\n    }\n\n    if (typeof __EC__ === 'object') {\n      for (var key in __EC__) {\n        if (__EC__.hasOwnProperty(key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    return false;\n  };\n\n\n  /***************************************\n   * START: data type checks\n   **************************************/\n  sn.is.string = function () {\n    return internals.isString(__EC__);\n  };\n\n  sn.is.number = function () {\n    return internals.isNumber(__EC__);\n  };\n\n  sn.is.boolean = function () {\n    return typeof __EC__ === 'boolean';\n  };\n\n  sn.is.null = function () {\n    return __EC__ === null;\n  };\n\n  sn.is.undefined = function () {\n    typeof __EC__ === 'undefined';\n  };\n\n  //not null and undefined\n  sn.is.defined = function () {\n    return __EC__ != null;\n  };\n\n  sn.is.object = function () {\n    return typeof __EC__ === 'object'\n      && __EC__ !== null\n      && !Array.isArray(__EC__);\n  };\n\n  sn.is.function = function () {\n    return typeof __EC__ === 'function';\n  };\n\n  sn.is.array = function () {\n    return typeof __EC__ === 'object' && Array.isArray(__EC__);\n  };\n\n  sn.is.date = function () {\n    return internals.isDate(__EC__);\n  };\n\n  /***************************************\n  * END: data type checks\n  **************************************/\n\n\n  /*************************************\n  * START: ASSERT && NOT MODULE DEFINITION\n  **************************************/\n  sn.not = function (val) {\n    return !sn.is(val);\n  };\n\n  sn.assert = {\n    is: function (val) {\n      return internals.assert(sn.is(val), 'Values are not the same.');\n    },\n    not: function (val) {\n      return internals.assert(!sn.is(val), 'Values are the same.');\n    }\n  };\n\n  for (var prop in sn.is) {\n    if (sn.is.hasOwnProperty(prop)) {\n      (function (prop) {\n        sn.not[prop] = function () {\n          return !sn.is[prop]();\n        };\n        sn.assert.is[prop] = function () {\n          return internals.assert(sn.is[prop](), 'Provided value is not ' + prop + '.');\n        };\n        sn.assert.not[prop] = function () {\n          return internals.assert(!sn.is[prop](), 'Provided value is ' + prop + '.');\n        };\n      })(prop);\n    }\n  }\n\n  /*************************************\n  * END: ASSERT MODULE DEFINITION\n  **************************************/\n\n\n})(sn);\n","(function (sn) {\n\n  //PRIVATE\n  var getDate = function () {\n    if (__EC__) {\n      sn.assert.is.date(__EC__);\n      return __EC__;\n    }\n    return new Date();\n  };\n\n\n\n  //PUBLIC\n\n  /**********************************************\n  * Change provided date so that it point to last day of current month\n  ************************************************/\n  sn.setLastDayOfMonth = function () {\n    var dt = getDate();\n    dt.setMonth(dt.getMonth() + 1, 0);\n    return dt;\n  };\n\n\n  /**********************************************\n  * Check if day in date is last day of month\n  * @return true -> day is last day of month; false - day is not last day of month\n  ************************************************/\n  sn.is.lastDayOfMonth = function () {\n    var dt = getDate();\n    var test = new Date(dt.getTime());\n    test.setDate(test.getDate() + 1);\n    return test.getDate() === 1;\n  };\n\n\n  /**********************************************\n  * Check if day in date is last day of month\n  * @return true -> day is last day of month; false - day is not last day of month\n  ************************************************/\n  sn.getLastDayOfMonth = function () {\n    var dt = getDate();\n    return (new Date(dt.getFullYear(), dt.getMonth() + 1, 0)).getDate();\n  };\n\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param milliseconds {Number} +/- milliseconds to add or remove from date\n  ************************************************/\n  sn.addMilliseconds = function (milliseconds) {\n    var dt = getDate();\n    dt.setMilliseconds(dt.getMilliseconds() + milliseconds);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param seconds {Number} +/- seconds to add or remove from date\n  ************************************************/\n  sn.addSeconds = function (seconds) {\n    var dt = getDate();\n    dt.setSeconds(dt.getSeconds() + seconds);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param minutes {Number} +/- minutes to add or remove from date\n  ************************************************/\n  sn.addMinutes = function (minutes) {\n    var dt = getDate();\n    dt.setMinutes(dt.getMinutes() + minutes);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param hours {Number} +/- hours to add or remove from date\n  ************************************************/\n  sn.addHours = function (hours) {\n    var dt = getDate();\n    dt.setHours(dt.getHours() + hours);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param days {Number} +/- days to add or remove from date\n  ************************************************/\n  sn.addDays = function (days) {\n    var dt = getDate();\n    dt.setDate(dt.getDate() + days);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param months {Number} +/- months to add or remove from date\n  ************************************************/\n  sn.addMonths = function (months) {\n    var dt = getDate();\n    dt.setMonth(dt.getMonth() + months);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param years {Number} +/- years to add or remove from date\n  ************************************************/\n  sn.addYears = function (years) {\n    var dt = getDate();\n    dt.setFullYear(dt.getFullYear() + years);\n    return dt;\n  };\n\n  /**********************************************\n  * Get the list of english months with fullName, shortName and month index\n  ************************************************/\n  sn.getMonths = function () {\n    return [\n      {\n        index: 0,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'January',\n        shortName: 'Jan',\n        days: 31\n      }, {\n        index: 1,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'February',\n        shortName: 'Feb',\n        days: [28, 29]\n      }, {\n        index: 2,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'March',\n        shortName: 'Mar',\n        days: 31\n      }, {\n        index: 3,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'April',\n        shortName: 'Apr',\n        days: 30\n      }, {\n        index: 4,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'May',\n        shortName: 'May',\n        days: 31\n      }, {\n        index: 5,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'June',\n        shortName: 'Jun',\n        days: 30\n      }, {\n        index: 6,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'July',\n        shortName: 'Jul',\n        days: 31\n      }, {\n        index: 7,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'August',\n        shortName: 'Aug',\n        days: 31\n      }, {\n        index: 8,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'September',\n        shortName: 'Sep',\n        days: 30\n      }, {\n        index: 9,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'October',\n        shortName: 'Oct',\n        days: 31\n      }, {\n        index: 10,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'November',\n        shortName: 'Nov',\n        days: 30\n      }, {\n        index: 11,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'December',\n        shortName: 'Dec',\n        days: 31\n      }\n    ];\n  };\n\n})(sn);\n","/**********************************************\r\n* returns function that can be executed only once\r\n* Result of function execution is cached and can be accesed latter by calling that function\r\n************************************************/\r\nsn.once = function(fn) {\r\n  var result;\r\n  return function() {\r\n    if (fn) {\r\n      result = fn.apply(this, arguments);\r\n      fn = null;\r\n    }\r\n    return result;\r\n  };\r\n};\r\n\r\n/**********************************************\r\n* Returns a function, that, as long as it continues to be invoked, will not be triggered\r\n* Default wait time for debounce is 200ms.\r\n ************************************************/\r\nsn.debounce = function(fn, wait) {\r\n  var timeout;\r\n  return function() {\r\n    var callNow = !timeout;\r\n\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(function() {\r\n      timeout = null;\r\n    }, wait);\r\n\r\n    if (callNow) { fn.apply(this, arguments); }\r\n  };\r\n};\r\n\r\n/*************************\r\n* execute function when condition becomes true\r\n************************/\r\nsn.execute = function(executeFn) {\r\n  return (function() {\r\n    var tick;\r\n    var maxTicks;\r\n\r\n    function executer(conditionFn) {\r\n      if (maxTicks < -tick) {\r\n        return;\r\n      } else if (!isNaN(maxTicks)) {\r\n        maxTicks -= tick;\r\n      }\r\n\r\n      conditionFn() ? executeFn() : setTimeout(executer.bind(null, conditionFn), tick);\r\n    }\r\n\r\n    return {\r\n      when: function(conditionFb, _tick, _maxTicks) {\r\n        tick = _tick || 5;\r\n        maxTicks = _maxTicks;\r\n        executer(conditionFb);\r\n      }\r\n\r\n    };\r\n  })();\r\n};\r\n\r\n/*****************************\r\n * sMsg - broadcast messages\r\n ****************************/\r\n(function(sn) {\r\n  var subscribers = {};\r\n\r\n  sn.broadcast = function(to) {\r\n    var callArguments = Array.prototype.slice.call(arguments, 1, arguments.length);\r\n    for (var i = 0; i < subscribers[to].length; i++) {\r\n      subscribers[to][i].apply(this, callArguments);\r\n    }\r\n  };\r\n\r\n  sn.listen = function(subscribe, cb) {\r\n    subscribers[subscribe] = subscribers[subscribe] || [];\r\n    subscribers[subscribe].push(cb);\r\n  };\r\n\r\n})(sn);\r\n","//DeepFreez / DeepSeal\n(function (sn) {\n\n  /**********************************************\n  * Apply Object.freez on object and each children object as deep as it goes.\n  * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n  ************************************************/\n  sn.deepFreez = function deepFreez(obj) {\n    return deepSealOrFreez(obj, Object.freez);\n  };\n\n  /**********************************************\n  * Apply Object.seal on object and each children object as deep as it goes.\n  * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\n  ************************************************/\n  sn.deepSeal = function deepSeal(obj) {\n    return deepSealOrFreez(obj, Object.seal);\n  };\n\n  function deepSealOrFreez(obj, action) {\n    action(obj);\n\n    Object.getOwnPropertyNames(obj).forEach(function (key) {\n      if (obj.hasOwnProperty(key)\n        && obj[key] !== null\n        && (typeof obj[key] === 'object' || typeof obj[key] === 'function')\n        && !Object.isSealed(obj[key]))\n      {\n        deepSealOrFreez(obj[key]);\n      }\n    });\n\n    return obj;\n  }\n\n})(sn);\n\n\n\n/**********************************************\n* Extend object with the properties from other provided objects.\n* In case of same propertie names value from first object will be overriden with the value from second object\n************************************************/\nsn.extend = function() {\n  for(var i=1; i < arguments.length; i++) {\n    Object.getOwnPropertyNames(arguments[i]).forEach(function (key) {\n      if(arguments[i].hasOwnProperty(key)) {\n        arguments[0][key] = arguments[i][key]\n      }\n    });\n  }\n  return arguments[0];\n};\n","(function (sn) {\r\n\r\n  //PUBLIC\r\n\r\n\r\n  /**************************************************\r\n  * Remove all occurrences of substring in string\r\n  * @param whatToReplace {String}\r\n  * @param replaceWith {String}\r\n  * @return {String} string with replaced old values with new values\r\n  **************************************************/\r\n  sn.replaceAll = function (whatToReplace, replaceWith) {\r\n    return typeof __EC__ === 'string'\r\n      ? __EC__.replace(new RegExp(whatToReplace.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'), replaceWith)\r\n      : __EC__;\r\n  };\r\n\r\n\r\n  /**************************************************\r\n  * Capitalize string\r\n  * @return {String} capitalized string\r\n  **************************************************/\r\n  sn.capitalize = function () {\r\n    return typeof __EC__ === 'string'\r\n      ? __EC__[(0)].toUpperCase() + __EC__.slice(1)\r\n      : __EC__;\r\n  };\r\n\r\n\r\n  /**************************************************\r\n  * test if string contains substring\r\n  * @param substring {String} substring we want to check for existance\r\n  * @param ignoreCase {Boolean} if true ignore case when comparing string\r\n  * @example capitalize('foo Bar', 'oo'); => 'Foo Bar'; capitalize('FOO Bar', true); => 'Foo bar'\r\n  * https://github.com/epeli/underscore.string\r\n  **************************************************/\r\n  sn.contains = function (substring, ignoreCase) {\r\n    if (ignoreCase === true) {\r\n      __EC__ = __EC__.toLowerCase();\r\n      substring = substring.toLowerCase();\r\n    }\r\n\r\n    return __EC__.indexOf(substring) !== -1;\r\n  };\r\n\r\n\r\n  /**************************************************\r\n  * Break string in array of substring.\r\n  * @param step {Number} length of chopped substrings\r\n  * @example: chop(\"whitespace\", 3); => ['whi', 'tes', 'pac', 'e']\r\n  * @return {Array} array containing chopped substrings\r\n  **************************************************/\r\n  sn.chop = function (step) {\r\n    if (!__EC__) { return []; }\r\n    __EC__ = String(__EC__);\r\n    step = ~~step;\r\n    return step > 0 ? __EC__.match(new RegExp('.{1,' + step + '}', 'g')) : [__EC__];\r\n  };\r\n\r\n\r\n  /**************************************************\r\n  * Trim and replace multiple spaces with a single space.\r\n  * @return {String} trimmed and cleaned string\r\n  **************************************************/\r\n  sn.clean = function () {\r\n    return __EC__.trim().replace(/\\s\\s+/g, ' ');\r\n  };\r\n\r\n\r\n  /**********************************************\r\n  * Truncate string if it exceed max number of characters,\r\n  * apply provided truncate string at the end of truncated string (default: '...')\r\n  * @param length {Number} cut the string after this number of characters\r\n  * @param appender [optional, default: '...'] {String} string that will be appended to truncated string\r\n  * @return {String} truncated string\r\n  **********************************************/\r\n  sn.truncate = function (length, appender) {\r\n    appender = appender || '...';\r\n    appender = ~~appender;\r\n    return __EC__.length > length ? __EC__.slice(0, length) + appender : __EC__;\r\n  };\r\n\r\n\r\n  /**********************************************\r\n  * get part of the string between 2 words.\r\n  * @param startStr {String}\r\n  * @param endStr {String}\r\n  * @return {String} string between startStr and endStr\r\n  ***********************************************/\r\n  sn.between = function (startStr, endStr) {\r\n    var startIndex = __EC__.indexOf(startStr);\r\n    var endIndex = __EC__.indexOf(endStr);\r\n\r\n    if (startIndex === -1 || startIndex === -1) {\r\n      return undefined;\r\n    }\r\n\r\n    startIndex += startStr.length;\r\n    return __EC__.substr(startIndex, endIndex - startIndex);\r\n  };\r\n\r\n})(sn);\r\n"]}