{"version":3,"sources":["sn.start.js","sn.end.js","sn.function.js","sn.string.js"],"names":["global","factory","exports","module","define","amd","sn","this","executionContext","__EC__","once","fn","result","apply","arguments","debounce","wait","timeout","callNow","clearTimeout","setTimeout","execute","executeFn","executer","conditionFn","maxTicks","tick","isNaN","bind","when","conditionFb","_tick","_maxTicks","subscribers","broadcast","to","callArguments","Array","prototype","slice","call","length","i","listen","subscribe","cb","push","replaceAll","whatToReplace","with","replaceWith","replace","RegExp","capitalize","str","toUpperCase","contains","str1","str2","ignoreCase","toLowerCase","indexOf","chop","step","String","match","clean","trim","truncate","truncateStr"],"mappings":"CAKA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,IACA,kBAAAG,SAAAA,OAAAC,IAAAD,OAAAH,GACAD,EAAAM,GAAAL,KACAM,KAAA,WAEA,YAEA,SAAAD,GAAAE,GAEA,MADAF,GAAAG,OAAAD,EACAF,ECfA,MCIAA,GAAAI,KAAA,SAAAC,GACA,GAAAC,EACA,OAAA,YAKA,MAJAD,KACAC,EAAAD,EAAAE,MAAAN,KAAAO,WACAH,EAAA,MAEAC,IAQAN,EAAAS,SAAA,SAAAJ,EAAAK,GACA,GAAAC,EACA,OAAA,YACA,GAAAC,IAAAD,CAEAE,cAAAF,GACAA,EAAAG,WAAA,WACAH,EAAA,MACAD,GAEAE,GAAAP,EAAAE,MAAAN,KAAAO,aAOAR,EAAAe,QAAA,SAAAC,GACA,MAAA,YAIA,QAAAC,GAAAC,GACAC,GAAAC,IAEAC,MAAAF,KACAA,GAAAC,GAGAF,IAAAF,IAAAF,WAAAG,EAAAK,KAAA,KAAAJ,GAAAE,IAVA,GAAAA,GACAD,CAYA,QACAI,KAAA,SAAAC,EAAAC,EAAAC,GACAN,EAAAK,GAAA,EACAN,EAAAO,EACAT,EAAAO,SAUA,SAAAxB,GACA,GAAA2B,KAEA3B,GAAA4B,UAAA,SAAAC,GAEA,IAAA,GADAC,GAAAC,MAAAC,UAAAC,MAAAC,KAAA1B,UAAA,EAAAA,UAAA2B,QACAC,EAAA,EAAAA,EAAAT,EAAAE,GAAAM,OAAAC,IACAT,EAAAE,GAAAO,GAAA7B,MAAAN,KAAA6B,IAIA9B,EAAAqC,OAAA,SAAAC,EAAAC,GACAZ,EAAAW,GAAAX,EAAAW,OACAX,EAAAW,GAAAE,KAAAD,KAGAvC,GChFAA,EAAAyC,WAAA,SAAAC,GACA,OACAC,KAAA,SAAAC,GACA,MAAA,gBAAA5C,GAAAG,OACAH,EAAAG,OAAA0C,QAAA,GAAAC,QAAAJ,EAAAG,QAAA,yBAAA,QAAA,KAAAD,GACA5C,EAAAG,UAKAH,EAAA+C,WAAA,SAAAC,GACA,MAAA,gBAAAA,GAAAA,EAAA,GAAAC,cAAAD,EAAAf,MAAA,GAAAe,GAcAhD,EAAAkD,SAAA,SAAAC,EAAAC,EAAAC,GAKA,MAJAA,MAAA,IACAF,EAAAA,EAAAG,cACAF,EAAAA,EAAAE,eAEAH,EAAAI,QAAAH,MAAA,GAOApD,EAAAwD,KAAA,SAAAR,EAAAS,GACA,MAAAT,IAGAA,EAAAU,OAAAV,GACAS,IAAAA,EACAA,EAAA,EAAAT,EAAAW,MAAA,GAAAb,QAAA,OAAAW,EAAA,IAAA,OAAAT,QAOAhD,EAAA4D,MAAA,SAAAZ,GACA,MAAAA,GAAAa,OAAAhB,QAAA,SAAA,MAQA7C,EAAA8D,SAAA,SAAAd,EAAAb,EAAA4B,GAGA,MAFAA,GAAAA,GAAA,MACA5B,IAAAA,EACAa,EAAAb,OAAAA,EAAAa,EAAAf,MAAA,EAAAE,GAAA4B,EAAAf,GF9DAhD","file":"sn.min.js","sourcesContent":["/*****************************************************\n\t  s.js https://github.com/snovakovic/s.js\n    author: stefan.novakovich@gmail.com\n    version: 0.0.1\n ***************************************************/\n(function(global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n      (global.sn = factory());\n} (this, (function() {\n\n  'use strict';\n\n  function sn(executionContext) {\n    sn.__EC__ = executionContext;\n    return sn;\n  }\n\n  //app files will be concatinated here and then this will be closed with sn.end.js\n\n","  return sn;\n})));\n","/**********************************************\n* returns function that can be executed only once\n* Result of function execution is cached and can be accesed latter by calling that function\n************************************************/\nsn.once = function(fn) {\n  var result;\n  return function() {\n    if (fn) {\n      result = fn.apply(this, arguments);\n      fn = null;\n    }\n    return result;\n  };\n};\n\n/**********************************************\n* Returns a function, that, as long as it continues to be invoked, will not be triggered\n* Default wait time for debounce is 200ms.\n ************************************************/\nsn.debounce = function(fn, wait) {\n  var timeout;\n  return function() {\n    var callNow = !timeout;\n\n    clearTimeout(timeout);\n    timeout = setTimeout(function() {\n      timeout = null;\n    }, wait);\n\n    if (callNow) { fn.apply(this, arguments); }\n  };\n};\n\n/*************************\n* execute function when condition becomes true\n************************/\nsn.execute = function(executeFn) {\n  return (function() {\n    var tick;\n    var maxTicks;\n\n    function executer(conditionFn) {\n      if (maxTicks < -tick) {\n        return;\n      } else if (!isNaN(maxTicks)) {\n        maxTicks -= tick;\n      }\n\n      conditionFn() ? executeFn() : setTimeout(executer.bind(null, conditionFn), tick);\n    }\n\n    return {\n      when: function(conditionFb, _tick, _maxTicks) {\n        tick = _tick || 5;\n        maxTicks = _maxTicks;\n        executer(conditionFb);\n      }\n\n    };\n  })();\n};\n\n/*****************************\n * sMsg - broadcast messages\n ****************************/\n(function(sn) {\n  var subscribers = {};\n\n  sn.broadcast = function(to) {\n    var callArguments = Array.prototype.slice.call(arguments, 1, arguments.length);\n    for (var i = 0; i < subscribers[to].length; i++) {\n      subscribers[to][i].apply(this, callArguments);\n    }\n  };\n\n  sn.listen = function(subscribe, cb) {\n    subscribers[subscribe] = subscribers[subscribe] || [];\n    subscribers[subscribe].push(cb);\n  };\n\n})(sn);\n","sn.replaceAll = function(whatToReplace) {\n  return {\n    with: function(replaceWith) {\n      return typeof sn.__EC__ === 'string'\n        ? sn.__EC__.replace(new RegExp(whatToReplace.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'), replaceWith)\n        : sn.__EC__;\n    }\n  }\n};\n\nsn.capitalize = function(str) {\n  return typeof str === 'string' ? str[(0)].toUpperCase() + str.slice(1) : str;\n};\n\n/***********************************************\n * Below methods has been taken from\n * https://github.com/epeli/underscore.string\n************************************************/\n\n/*\n * test if string contains substring\n * @ignore case - case is ignored on comparation\n * @example capitalize('foo Bar', 'oo'); => 'Foo Bar'; capitalize('FOO Bar', true); => 'Foo bar'\n * https://github.com/epeli/underscore.string\n*/\nsn.contains = function(str1, str2, ignoreCase) {\n  if (ignoreCase === true) {\n    str1 = str1.toLowerCase();\n    str2 = str2.toLowerCase();\n  }\n  return str1.indexOf(str2) !== -1;\n};\n\n/*\n * Break string in array of substring\n * @example: chop(\"whitespace\", 3); => ['whi', 'tes', 'pac', 'e']\n*/\nsn.chop = function(str, step) {\n  if (!str) {\n    return [];\n  }\n  str = String(str);\n  step = ~~step;\n  return step > 0 ? str.match(new RegExp('.{1,' + step + '}', 'g')) : [str];\n};\n\n/*\n* Trim and replace multiple spaces with a single space.\n* @example clean(' foo    bar   '); => 'foo bar'\n*/\nsn.clean = function(str) {\n  return str.trim().replace(/\\s\\s+/g, ' ');\n};\n\n\n/**\n* Truncate string if it exceed max number of characters,\n* apply provided truncate string at the end of truncated string (default: '...')\n*/\nsn.truncate = function(str, length, truncateStr) {\n  truncateStr = truncateStr || '...';\n  length = ~~length;\n  return str.length > length ? str.slice(0, length) + truncateStr : str;\n};\n\n"],"sourceRoot":"/source/"}