{"version":3,"sources":["sn.js","sn.end.js","sn.array.js","sn.function.js","sn.is.js","sn.object.js","sn.string.js"],"names":["global","factory","exports","module","define","amd","sn","this","executionContext","__EC__","each","arr","callback","i","l","length","call","iterate","remove","elToRemove","max","pos","indexOf","lastIndexOf","splice","shuffle","temporaryValue","randomIndex","currentIndex","Math","floor","random","getFilledArray","val","len","rv","Array","unique","originalArr","push","first","condition","last","stack","defaultArray","_stack","add","isArray","prototype","apply","pop","peek","array","queue","_queue","addRange","range","shift","once","fn","result","arguments","debounce","wait","timeout","callNow","clearTimeout","setTimeout","execute","executeFn","executer","conditionFn","maxTicks","tick","isNaN","bind","when","conditionFb","_tick","_maxTicks","subscribers","broadcast","to","callArguments","slice","listen","subscribe","cb","isString","testVar","isNumber","is","t2","t1","_EC_","empty","test","key","Object","hasOwnProperty","defined","string","number","boolean","null","undefined","object","function","deepSealOrFreez","obj","action","getOwnPropertyNames","forEach","isSealed","deepFreez","freez","deepSeal","seal","extend","replaceAll","whatToReplace","with","replaceWith","replace","RegExp","capitalize","str","toUpperCase","contains","str1","str2","ignoreCase","toLowerCase","chop","step","String","match","clean","trim","truncate","truncateStr","alphabetic","re","alphanumeric","numeric","lowercase","uppercase","email","strongpassword","ip"],"mappings":"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","file":"sn.min.js","sourcesContent":["/*****************************************************\n\t  s.js https://github.com/snovakovic/s.js\n    author: stefan.novakovich@gmail.com\n    version: 0.0.1\n ***************************************************/\n(function(global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n      (global.sn = factory());\n} (this, (function() {\n\n  'use strict';\n\n  function sn(executionContext) {\n    sn.__EC__ = executionContext;\n    return sn;\n  }\n\n  //app files will be concatinated here and then this will be closed with sn.end.js\n\n","  return sn;\n})));\n","/**********************************************\n* Loop throught array. this in callback function will ber set to array.\n* @param arr {Array} array we want to iterate\n* @param callback {Function} callback function that will be called on each iteration\n************************************************/\nsn.each = function(arr, callback) {\n  for (var i = 0, l = arr.length; i < l; i++) {\n    if (callback.call(arr, arr[i], i) === false) {\n      break;\n    }\n  }\n};\n\n/**********************************************\n* Iterate specific number of times.\n* @param l {Number} number of times we want to iterate\n* @param callback {Function} callback function that will be called on each iteration\n************************************************/\nsn.iterate = function(l, callback) {\n  for (var i = 0; i < l; i++) {\n    if (callback.call(null, i) === false) {\n      break;\n    }\n  }\n};\n\n/***********************************************\n* Remove all occurrences of element from array\n* @param arr {Array} array from where we want  to remove values\n* @param elToRemove {...} element that we want to remove from array\n* @param max {whole number integer} max number of occurrences to remove. 1 - remove first, -1 remove last.\n* @return {Array} new array without removed values\n***********************************************/\nsn.remove = function(arr, elToRemove, max) {\n  var pos;\n\n  while (pos !== -1 && max !== 0) {\n    if (max) {\n      if (max >= 1) {\n        pos = arr.indexOf(elToRemove);\n        max--;\n      } else {\n        pos = arr.lastIndexOf(elToRemove);\n        max++;\n      }\n\n    } else {\n      pos = arr.indexOf(elToRemove);\n    }\n\n    pos > -1 && arr.splice(pos, 1);\n  }\n\n  return arr;\n};\n\n/*******************************************************\n* Shuffle values in the array\n* https://github.com/Daplie/knuth-shuffle\n* @param arr {Array} input array that we want to shuffle\n* @return {Array} shuffled array\n********************************************************/\nsn.shuffle = function(arr) {\n  var currentIndex = arr.length;\n  var temporaryValue;\n  var randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = arr[currentIndex];\n    arr[currentIndex] = arr[randomIndex];\n    arr[randomIndex] = temporaryValue;\n  }\n\n  return arr;\n};\n\n/*********************************************\n* Get the new array filled with default values\n* @param val {Any} default array value\n* @return len {Integer} size of the new array\n**********************************************/\nsn.getFilledArray = function(val, len) {\n  var rv = new Array(len);\n  while (--len >= 0) {\n    rv[len] = val;\n  }\n  return rv;\n};\n\n/*************************************************\n* Returns new array containing only unique values from original array\n* Doesn't support nested objects and array\n* @param originalArr {Array} array form where we want to remove duplicate values\n* @return array without duplicate values\n***********************************************/\nsn.unique = function(originalArr) {\n  var arr = [];\n  for (var i = 0; i < originalArr.length; i++) {\n    if (arr.indexOf(originalArr[i]) === -1) {\n      arr.push(originalArr[i]);\n    }\n  }\n  return arr;\n};\n\n/********************************************s\n* Returns first element of array if no condition is passed,\n* else if there is condition returns first element of array that meets condition\n* @param arr {Array} array we want to search in for value\n* @param condition {Function} function that returns true if value is found.\n* @return array item if found or undefined if not found\n**********************************************/\nsn.first = function(arr, condition) {\n  if (arr && arr.length) {\n    if (condition) {\n      for (var i = 0; i < arr.length; i++) {\n        if (condition(arr[i])) {\n          return arr[i];\n        }\n      }\n    } else {\n      return arr[0];\n    }\n  }\n\n  return undefined;\n\n};\n\n/**********************************************************\n* Returns last element of array if no condition is passed,\n* else if there is condition returns last element of array that meets condition\n* @param arr {Array} [optional] array we want to search in for value\n* @param condition {Function} function that returns true if value is found.\n* @return array item if found or undefined if not found\n***********************************************************/\nsn.last = function(arr, condition) {\n  if (arr && arr.length) {\n    if (condition) {\n      for (var i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n          return arr[i];\n        }\n      }\n    } else {\n      return arr[arr.length - 1];\n    }\n  }\n\n  return undefined;\n\n};\n\n/*********************************************\n * Stack implementation LIFO last in first out\n * @param defaultArray [optional] {Array} default array that will be used as a stack base\n*********************************************/\nsn.stack = function(defaultArray) {\n  return (function() {\n    var _stack = defaultArray || [];\n    return {\n      add: function(val) {\n        Array.isArray(val) ? Array.prototype.push.apply(_stack, val) : _stack.push(val);\n      },\n      remove: function() {\n        return _stack.length ? _stack.pop() : null;\n      },\n      peek: function() {\n        return _stack.length ? _stack[_stack.length - 1] : null;\n      },\n      get array() {\n        return _stack;\n      },\n      get length() {\n        return _stack.length;\n      }\n    };\n  })();\n};\n\n/*********************************************\n* Queue implementation FIFI: first in first out\n * @param defaultArray [optional] {Array} default array that will be used as a queue base\n*********************************************/\nsn.queue = function(defaultArray) {\n  return (function() {\n    var _queue = defaultArray || [];\n    return {\n      add: function(val) {\n        Array.isArray(val) ? Array.prototype.push.apply(_queue, val) : _queue.push(val);\n      },\n      addRange: function(range) {\n        Array.prototype.push.apply(_queue, range);\n      },\n      remove: function() {\n        return _queue.length ? _queue.shift() : null;\n      },\n      peek: function() {\n        return _queue.length ? _queue[0] : null;\n      },\n      get array() {\n        return _queue;\n      },\n      get length() {\n        return _queue.length;\n      }\n    };\n  })();\n};\n","/**********************************************\n* returns function that can be executed only once\n* Result of function execution is cached and can be accesed latter by calling that function\n************************************************/\nsn.once = function(fn) {\n  var result;\n  return function() {\n    if (fn) {\n      result = fn.apply(this, arguments);\n      fn = null;\n    }\n    return result;\n  };\n};\n\n/**********************************************\n* Returns a function, that, as long as it continues to be invoked, will not be triggered\n* Default wait time for debounce is 200ms.\n ************************************************/\nsn.debounce = function(fn, wait) {\n  var timeout;\n  return function() {\n    var callNow = !timeout;\n\n    clearTimeout(timeout);\n    timeout = setTimeout(function() {\n      timeout = null;\n    }, wait);\n\n    if (callNow) { fn.apply(this, arguments); }\n  };\n};\n\n/*************************\n* execute function when condition becomes true\n************************/\nsn.execute = function(executeFn) {\n  return (function() {\n    var tick;\n    var maxTicks;\n\n    function executer(conditionFn) {\n      if (maxTicks < -tick) {\n        return;\n      } else if (!isNaN(maxTicks)) {\n        maxTicks -= tick;\n      }\n\n      conditionFn() ? executeFn() : setTimeout(executer.bind(null, conditionFn), tick);\n    }\n\n    return {\n      when: function(conditionFb, _tick, _maxTicks) {\n        tick = _tick || 5;\n        maxTicks = _maxTicks;\n        executer(conditionFb);\n      }\n\n    };\n  })();\n};\n\n/*****************************\n * sMsg - broadcast messages\n ****************************/\n(function(sn) {\n  var subscribers = {};\n\n  sn.broadcast = function(to) {\n    var callArguments = Array.prototype.slice.call(arguments, 1, arguments.length);\n    for (var i = 0; i < subscribers[to].length; i++) {\n      subscribers[to][i].apply(this, callArguments);\n    }\n  };\n\n  sn.listen = function(subscribe, cb) {\n    subscribers[subscribe] = subscribers[subscribe] || [];\n    subscribers[subscribe].push(cb);\n  };\n\n})(sn);\n","/*****************************************************\n\t  Test Module part\n ***************************************************/\n(function(sn) {\n\n  function isString(testVar) {\n    return typeof testVar === 'string';\n  }\n\n  function isNumber(testVar) {\n    //NaN will produce false because NaN !== NaN\n    return typeof testVar === 'number' && testVar === testVar;\n  }\n\n  sn.is = function(t2) {\n    var t1 = sn._EC_;\n    if ((isString(t1) || isNumber(t1)) && (isString(t2) || isNumber(t2))) {\n      //this covers coercion between string and number without any gotchas\n      return (typeof t1 === typeof t2)\n        ? t1 === t2\n        : t1 == t2 && t1 !== '' && t2 !== '';\n\n    } else if (t1 == null && t2 == null) {\n      //This covers when vars are eather null or undefined without any gotchas\n      return true;\n    }\n\n    return t1 === t2;\n\n  };\n\n\n  /**\n   * Test if variable has been defined and is not empty,\n   * Following will be treated as false\n   * sn.is.empty(null); => true\n   * sn.is.empty(undefined); => true\n   * sn.is.empty({}); => true\n   * sn.is.empty([]); => true\n   * sn.is.empty(' '); => true\n   * sn.is.empty('\\n\\t'); => true\n   * sn.is.empty(null); => true\n  */\n  sn.is.empty = function(testVar) {\n    if (testVar == null\n      || (typeof testVar === 'string' && (/^\\s*$/).test(testVar))) {\n      return true;\n    }\n\n    if (typeof testVar === 'object') {\n      for (var key in testVar) {\n        if (Object.prototype.hasOwnProperty.call(testVar, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    return false;\n  };\n\n  sn.is.defined = function(testVar) {\n    return testVar == null;\n  };\n\n  /**\n   * VAR type check\n   */\n  sn.is.string = isString;\n\n  sn.is.number = isNumber;\n\n  sn.is.boolean = function(testVar) {\n    return typeof testVar === 'boolean';\n  };\n\n  sn.is.null = function(testVar) {\n    return testVar === null;\n  };\n\n  sn.is.undefined = function(testVar) {\n    typeof testVar === 'undefined';\n  };\n\n  sn.is.object = function(testVar) {\n    return typeof testVar === 'object' && testVar !== null && !Array.isArray(testVar);\n  };\n\n  sn.is.function = function(testVar) {\n    return typeof testVar === 'function';\n  };\n\n  sn.is.array = function(testVar) {\n    return typeof testVar === 'object' && Array.isArray(testVar);\n  };\n\n})(sn);\n","//DeepFreez / DeepSeal\n(function (sn) {\n\n  /**********************************************\n  * Apply Object.freez on object and each children object as deep as it goes.\n  * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n  ************************************************/\n  sn.deepFreez = function deepFreez(obj) {\n    return deepSealOrFreez(obj, Object.freez);\n  };\n\n  /**********************************************\n  * Apply Object.seal on object and each children object as deep as it goes.\n  * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\n  ************************************************/\n  sn.deepSeal = function deepSeal(obj) {\n    return deepSealOrFreez(obj, Object.seal);\n  };\n\n  function deepSealOrFreez(obj, action) {\n    action(obj);\n\n    Object.getOwnPropertyNames(obj).forEach(function (key) {\n      if (obj.hasOwnProperty(key)\n        && obj[key] !== null\n        && (typeof obj[key] === 'object' || typeof obj[key] === 'function')\n        && !Object.isSealed(obj[key]))\n      {\n        deepSealOrFreez(obj[key]);\n      }\n    });\n\n    return obj;\n  }\n\n})(sn);\n\n\n\n/**********************************************\n* Extend object with the properties from other provided objects.\n* In case of same propertie names value from first object will be overriden with the value from second object\n************************************************/\nsn.extend = function() {\n  for(var i=1; i < arguments.length; i++) {\n    Object.getOwnPropertyNames(arguments[i]).forEach(function (key) {\n      if(arguments[i].hasOwnProperty(key)) {\n        arguments[0][key] = arguments[i][key]\n      }\n    });\n  }\n  return arguments[0];\n}\n","sn.replaceAll = function(whatToReplace) {\n  return {\n    with: function(replaceWith) {\n      return typeof sn.__EC__ === 'string'\n        ? sn.__EC__.replace(new RegExp(whatToReplace.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'), replaceWith)\n        : sn.__EC__;\n    }\n  }\n};\n\nsn.capitalize = function(str) {\n  return typeof str === 'string' ? str[(0)].toUpperCase() + str.slice(1) : str;\n};\n\n/***********************************************\n * Below methods has been taken from\n * https://github.com/epeli/underscore.string\n************************************************/\n\n/*\n * test if string contains substring\n * @ignore case - case is ignored on comparation\n * @example capitalize('foo Bar', 'oo'); => 'Foo Bar'; capitalize('FOO Bar', true); => 'Foo bar'\n * https://github.com/epeli/underscore.string\n*/\nsn.contains = function(str1, str2, ignoreCase) {\n  if (ignoreCase === true) {\n    str1 = str1.toLowerCase();\n    str2 = str2.toLowerCase();\n  }\n  return str1.indexOf(str2) !== -1;\n};\n\n/*\n * Break string in array of substring\n * @example: chop(\"whitespace\", 3); => ['whi', 'tes', 'pac', 'e']\n*/\nsn.chop = function(str, step) {\n  if (!str) { return []; }\n  str = String(str);\n  step = ~~step;\n  return step > 0 ? str.match(new RegExp('.{1,' + step + '}', 'g')) : [str];\n};\n\n/*\n* Trim and replace multiple spaces with a single space.\n* @example clean(' foo    bar   '); => 'foo bar'\n*/\nsn.clean = function(str) {\n  return str.trim().replace(/\\s\\s+/g, ' ');\n};\n\n\n/**\n* Truncate string if it exceed max number of characters,\n* apply provided truncate string at the end of truncated string (default: '...')\n*/\nsn.truncate = function(str, length, truncateStr) {\n  truncateStr = truncateStr || '...';\n  length = ~~length;\n  return str.length > length ? str.slice(0, length) + truncateStr : str;\n};\n\n/****\n* RegExp tests\n****/\nsn.is.alphabetic = function(str) {\n  var re = /^[a-zA-Z ]*$/;\n  return re.test(str);\n};\n\nsn.is.alphanumeric = function(str) {\n  var re = /^[a-zA-Z0-9 ]*$/;\n  return re.test(str);\n};\n\nsn.is.numeric = function(str) {\n  var re = /^[0-9 ]*$/;\n  return re.test(str);\n};\n\nsn.is.lowercase = function(str) {\n  var re = /^[a-z ]*$/;\n  return re.test(str);\n};\n\nsn.is.uppercase = function(str) {\n  var re = /^[A-Z ]*$/;\n  return re.test(str);\n};\n\nsn.is.email = function(str) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(str);\n};\n\nsn.is.strongpassword = function(str) {\n  var re = /^(?=^.{6,}$)((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.*$/;\n  return re.test(str);\n};\n\nsn.is.ip = function(str) {\n  var re = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n  return re.test(str);\n};\n\n"]}