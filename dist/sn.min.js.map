{"version":3,"sources":["sn.js","sn.end.js","sn.array.js","sn.assert.js","sn.date.js","sn.function.js","sn.object.js","sn.string.js"],"names":["global","factory","exports","module","define","amd","sn","this","executionContext","__EC__","each","callback","i","l","length","call","iterate","remove","elToRemove","max","pos","indexOf","lastIndexOf","splice","shuffle","temporaryValue","randomIndex","currentIndex","Math","floor","random","getFilledArray","val","len","rv","Array","unique","originalArr","arr","push","first","condition","last","stack","defaultArray","_stack","add","isArray","prototype","apply","pop","peek","array","queue","_queue","addRange","range","shift","internals","isString","testVar","isNumber","isDate","Object","toString","isFunction","Boolean","assert","assertMessage","TypeError","is","t2","t1","empty","test","key","hasOwnProperty","defined","string","number","boolean","null","undefined","object","function","date","prop","getDate","Date","setLastDayOfMonth","dt","setMonth","getMonth","lastDayOfMonth","getTime","setDate","getLastDayOfMonth","getFullYear","addMilliseconds","milliseconds","setMilliseconds","getMilliseconds","addSeconds","seconds","setSeconds","getSeconds","addMinutes","minutes","setMinutes","getMinutes","addHours","hours","setHours","getHours","addDays","days","addMonths","months","addYears","years","setFullYear","getMonths","index","month","name","shortName","once","fn","result","arguments","debounce","wait","timeout","callNow","clearTimeout","setTimeout","execute","executeFn","executer","conditionFn","maxTicks","tick","isNaN","bind","when","conditionFb","_tick","_maxTicks","subscribers","broadcast","to","callArguments","slice","listen","subscribe","cb","deepSealOrFreez","obj","action","getOwnPropertyNames","forEach","isSealed","deepFreez","freez","deepSeal","seal","extend","replaceAll","whatToReplace","with","replaceWith","replace","RegExp","capitalize","str","toUpperCase","contains","str1","str2","ignoreCase","toLowerCase","chop","step","String","match","clean","trim","truncate","truncateStr","between","startStr","endStr","startIndex","endIndex","substr"],"mappings":"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","file":"sn.min.js","sourcesContent":["/*****************************************************\n\t  s.js https://github.com/snovakovic/s.js\n    author: stefan.novakovich@gmail.com\n    version: 0.0.1\n ***************************************************/\n(function(global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n      (global.sn = factory());\n} (this, (function() {\n\n  'use strict';\n\n  function sn(executionContext) {\n    sn.__EC__ = executionContext;\n    return sn;\n  }\n\n  //app files will be concatinated here and then this will be closed with sn.end.js\n\n","  return sn;\n})));\n","/**********************************************\n* Loop throught array. this in callback function will ber set to array.\n* @param arr {Array} array we want to iterate\n* @param callback {Function} callback function that will be called on each iteration\n************************************************/\nsn.each = function(callback) {\n  for (var i = 0, l = sn.__EC__.length; i < l; i++) {\n    if (callback.call(sn.__EC__, sn.__EC__[i], i) === false) {\n      break;\n    }\n  }\n\n  return sn;\n};\n\n/**********************************************\n* Iterate specific number of times.\n* @param l {Number} number of times we want to iterate\n* @param callback {Function} callback function that will be called on each iteration\n************************************************/\nsn.iterate = function(l, callback) {\n  for (var i = 0; i < l; i++) {\n    if (callback.call(null, i) === false) {\n      break;\n    }\n  }\n};\n\n/***********************************************\n* Remove all occurrences of element from array\n* @param arr {Array} array from where we want  to remove values\n* @param elToRemove {...} element that we want to remove from array\n* @param max {whole number integer} max number of occurrences to remove. 1 - remove first, -1 remove last.\n* @return {Array} new array without removed values\n***********************************************/\nsn.remove = function(elToRemove, max) {\n  var pos;\n\n  while (pos !== -1 && max !== 0) {\n    if (max) {\n      if (max >= 1) {\n        pos = sn.__EC__.indexOf(elToRemove);\n        max--;\n      } else {\n        pos = sn.__EC__.lastIndexOf(elToRemove);\n        max++;\n      }\n\n    } else {\n      pos = sn.__EC__.indexOf(elToRemove);\n    }\n\n    pos > -1 && sn.__EC__.splice(pos, 1);\n  }\n\n  return sn.__EC__;\n};\n\n/*******************************************************\n* Shuffle values in the array\n* https://github.com/Daplie/knuth-shuffle\n* @param arr {Array} input array that we want to shuffle\n* @return {Array} shuffled array\n********************************************************/\nsn.shuffle = function() {\n  var currentIndex = sn.__EC__.length;\n  var temporaryValue;\n  var randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = sn.__EC__[currentIndex];\n    sn.__EC__[currentIndex] = sn.__EC__[randomIndex];\n    sn.__EC__[randomIndex] = temporaryValue;\n  }\n\n  return sn.__EC__;\n};\n\n/*********************************************\n* Get the new array filled with default values\n* @param val {Any} default array value\n* @return len {Integer} size of the new array\n**********************************************/\nsn.getFilledArray = function(val, len) {\n  var rv = new Array(len);\n  while (--len >= 0) {\n    rv[len] = val;\n  }\n  return rv;\n};\n\n/*************************************************\n* Returns new array containing only unique values from original array\n* Doesn't support nested objects and array\n* @param originalArr {Array} array form where we want to remove duplicate values\n* @return array without duplicate values\n***********************************************/\nsn.unique = function(originalArr) {\n  var arr = [];\n  for (var i = 0; i < originalArr.length; i++) {\n    if (arr.indexOf(originalArr[i]) === -1) {\n      arr.push(originalArr[i]);\n    }\n  }\n  return arr;\n};\n\n/********************************************s\n* Returns first element of array if no condition is passed,\n* else if there is condition returns first element of array that meets condition\n* @param arr {Array} array we want to search in for value\n* @param condition {Function} function that returns true if value is found.\n* @return array item if found or undefined if not found\n**********************************************/\nsn.first = function(arr, condition) {\n  if (arr && arr.length) {\n    if (condition) {\n      for (var i = 0; i < arr.length; i++) {\n        if (condition(arr[i])) {\n          return arr[i];\n        }\n      }\n    } else {\n      return arr[0];\n    }\n  }\n\n  return undefined;\n\n};\n\n/**********************************************************\n* Returns last element of array if no condition is passed,\n* else if there is condition returns last element of array that meets condition\n* @param arr {Array} [optional] array we want to search in for value\n* @param condition {Function} function that returns true if value is found.\n* @return array item if found or undefined if not found\n***********************************************************/\nsn.last = function(arr, condition) {\n  if (arr && arr.length) {\n    if (condition) {\n      for (var i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n          return arr[i];\n        }\n      }\n    } else {\n      return arr[arr.length - 1];\n    }\n  }\n\n  return undefined;\n\n};\n\n/*********************************************\n * Stack implementation LIFO last in first out\n * @param defaultArray [optional] {Array} default array that will be used as a stack base\n*********************************************/\nsn.stack = function(defaultArray) {\n  return (function() {\n    var _stack = defaultArray || [];\n    return {\n      add: function(val) {\n        Array.isArray(val) ? Array.prototype.push.apply(_stack, val) : _stack.push(val);\n      },\n      remove: function() {\n        return _stack.length ? _stack.pop() : null;\n      },\n      peek: function() {\n        return _stack.length ? _stack[_stack.length - 1] : null;\n      },\n      get array() {\n        return _stack;\n      },\n      get length() {\n        return _stack.length;\n      }\n    };\n  })();\n};\n\n/*********************************************\n* Queue implementation FIFI: first in first out\n * @param defaultArray [optional] {Array} default array that will be used as a queue base\n*********************************************/\nsn.queue = function(defaultArray) {\n  return (function() {\n    var _queue = defaultArray || [];\n    return {\n      add: function(val) {\n        Array.isArray(val) ? Array.prototype.push.apply(_queue, val) : _queue.push(val);\n      },\n      addRange: function(range) {\n        Array.prototype.push.apply(_queue, range);\n      },\n      remove: function() {\n        return _queue.length ? _queue.shift() : null;\n      },\n      peek: function() {\n        return _queue.length ? _queue[0] : null;\n      },\n      get array() {\n        return _queue;\n      },\n      get length() {\n        return _queue.length;\n      }\n    };\n  })();\n};\n","(function (sn) {\n\n  var internals = {\n    isString: function(testVar) {\n      return typeof testVar === 'string';\n    },\n    isNumber: function (testVar) {\n      //NaN will produce false because NaN !== NaN\n      return typeof testVar === 'number' && testVar === testVar;\n    },\n    isDate: function (testVar) {\n      return Object.prototype.toString.call(testVar) === '[object Date]';\n    },\n    isFunction: function (testVar) {\n      return Boolean(testVar && Object.prototype.toString.call(testVar) === '[object Function]');\n    },\n    assert: function(val, assertMessage) {\n      if(val) {\n        return val;\n      }\n      throw new TypeError(assertMessage);\n    }\n\n  };\n\n  //PUBLIC\n\n  /****************************************\n  * Safely check if two variables are the same without JS coercion gotchas\n  * == is used when comparing string and numbers (with exception for emptySting == 0 which is false as it should be)\n  * == is used for compering null and undefined\n  * for everything else === is used.\n  * ********************************* */\n  sn.is = function (t2) {\n    var t1 = sn.__EC__;\n    if ((internals.isString(t1) || internals.isNumber(t1)) && (internals.isString(t2) || internals.isNumber(t2))) {\n      //this covers coercion between string and number without any gotchas\n      return (typeof t1 === typeof t2)\n        ? t1 === t2\n        : t1 == t2 && t1 !== '' && t2 !== '';\n\n    } else if (t1 == null && t2 == null) {\n      //This covers when vars are either null or undefined without any gotchas\n      return true;\n    }\n\n    return t1 === t2;\n\n  };\n\n\n  /**\n   * Test if variable has been defined and is not empty,\n   * Following will be treated as false\n   * sn.is.empty(null); => true\n   * sn.is.empty(undefined); => true\n   * sn.is.empty({}); => true\n   * sn.is.empty([]); => true\n   * sn.is.empty(' '); => true\n   * sn.is.empty('\\n\\t'); => true\n   * sn.is.empty(null); => true\n  */\n  sn.is.empty = function () {\n    if (sn.__EC__ == null\n      || (typeof sn.__EC__ === 'string' && (/^\\s*$/).test(sn.__EC__))) {\n      return true;\n    }\n\n    if (typeof sn.__EC__ === 'object') {\n      for (var key in sn.__EC__) {\n        if (Object.prototype.hasOwnProperty.call(sn.__EC__, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    return false;\n  };\n\n  /**********************************************\n  * Check if variable is defined. Variable is consider defined if it's not null or undefined\n  ************************************************/\n  sn.is.defined = function () {\n    return sn.__EC__ == null;\n  };\n\n  /***************************************\n   * START: data type checks\n   **************************************/\n  sn.is.string = function () {\n    return internals.isString(sn.__EC__);\n  };\n\n  sn.is.number = function () {\n    return internals.isNumber(sn.__EC__);\n  };\n\n  sn.is.boolean = function () {\n    return typeof sn.__EC__ === 'boolean';\n  };\n\n  sn.is.null = function () {\n    return sn.__EC__ === null;\n  };\n\n  sn.is.undefined = function () {\n    typeof sn.__EC__ === 'undefined';\n  };\n\n  sn.is.object = function () {\n    return typeof sn.__EC__ === 'object'\n      && sn.__EC__ !== null\n      && !Array.isArray(sn.__EC__)\n      && !internals.isFunction(sn.__EC__);\n  };\n\n  sn.is.function = function () {\n    return internals.isFunction(sn.__EC__);\n  };\n\n  sn.is.array = function () {\n    return typeof sn.__EC__ === 'object' && Array.isArray(sn.__EC__);\n  };\n\n  sn.is.date = function () {\n    return internals.isDate(sn.__EC__);\n  };\n\n  /***************************************\n  * END: data type checks\n  **************************************/\n\n\n\n  /*************************************\n  * START: ASSERT MODULE DEFINITION\n  **************************************/\n  sn.assert = {\n    is: function (val) {\n      return internals.assert(sn.is(val), 'Values are not the same.');\n  }\n};\n\n  for (var prop in sn.is) {\n    if (sn.is.hasOwnProperty(prop)) {\n      (function (prop) {\n        sn.assert.is[prop] = function () {\n          return internals.assert(sn.is[prop](), 'Provided value is not ' + prop);\n        };\n      })(prop);\n    }\n  }\n\n  /*************************************\n  * END: ASSERT MODULE DEFINITION\n  **************************************/\n\n\n})(sn);\n","(function (sn) {\n\n  var internals = {\n    getDate: function () {\n      if (sn.__EC__) {\n        sn.assert.is.date(sn.__EC__);\n        return sn.__EC__;\n      }\n\n      return new Date();\n    }\n  };\n\n  /**********************************************\n  * Change provided date so that it point to last day of current month\n  ************************************************/\n  sn.setLastDayOfMonth = function () {\n    var dt = internals.getDate();\n    dt.setMonth(dt.getMonth() + 1, 0);\n    return dt;\n  };\n\n\n  /**********************************************\n  * Check if day in date is last day of month\n  * @return true -> day is last day of month; false - day is not last day of month\n  ************************************************/\n  sn.is.lastDayOfMonth = function () {\n    var dt = internals.getDate();\n    var test = new Date(dt.getTime());\n    test.setDate(test.getDate() + 1);\n    return test.getDate() === 1;\n  };\n\n\n  /**********************************************\n  * Check if day in date is last day of month\n  * @param dt {Date} date we want ot check\n  * @return true -> day is last day of month; false - day is not last day of month\n  ************************************************/\n  sn.getLastDayOfMonth = function () {\n    var dt = internals.getDate();\n    return (new Date(dt.getFullYear(), dt.getMonth() + 1, 0)).getDate();\n  };\n\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param milliseconds {Number} +/- milliseconds to add or remove from date\n  ************************************************/\n  sn.addMilliseconds = function (milliseconds) {\n    var dt = internals.getDate();\n    dt.setMilliseconds(dt.getMilliseconds() + milliseconds);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param seconds {Number} +/- seconds to add or remove from date\n  ************************************************/\n  sn.addSeconds = function (seconds) {\n    var dt = internals.getDate();\n    dt.setSeconds(dt.getSeconds() + seconds);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param minutes {Number} +/- minutes to add or remove from date\n  ************************************************/\n  sn.addMinutes = function (minutes) {\n    var dt = internals.getDate();\n    dt.setMinutes(dt.getMinutes() + minutes);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param hours {Number} +/- hours to add or remove from date\n  ************************************************/\n  sn.addHours = function (hours) {\n    var dt = internals.getDate();\n    dt.setHours(dt.getHours() + hours);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param days {Number} +/- days to add or remove from date\n  ************************************************/\n  sn.addDays = function (days) {\n    var dt = internals.getDate();\n    dt.setDate(dt.getDate() + days);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param months {Number} +/- months to add or remove from date\n  ************************************************/\n  sn.addMonths = function (months) {\n    var dt = internals.getDate();\n    dt.setMonth(dt.getMonth() + months);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param years {Number} +/- years to add or remove from date\n  ************************************************/\n  sn.addYears = function (years) {\n    var dt = internals.getDate();\n    dt.setFullYear(dt.getFullYear() + years);\n    return dt;\n  };\n\n  /**********************************************\n  * Get the list of english months with fullName, shortName and month index\n  ************************************************/\n  sn.getMonths = function () {\n    return [\n      {\n        index: 0,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'January',\n        shortName: 'Jan',\n        days: 31,\n      }, {\n        index: 1,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'February',\n        shortName: 'Feb',\n        days: [28, 29],\n      }, {\n        index: 2,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'March',\n        shortName: 'Mar',\n        days: 31,\n      }, {\n        index: 3,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'April',\n        shortName: 'Apr',\n        days: 30,\n      }, {\n        index: 4,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'May',\n        shortName: 'May',\n        days: 31,\n      }, {\n        index: 5,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'June',\n        shortName: 'Jun',\n        days: 30,\n      }, {\n        index: 6,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'July',\n        shortName: 'Jul',\n        days: 31,\n      }, {\n        index: 7,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'August',\n        shortName: 'Aug',\n        days: 31,\n      }, {\n        index: 8,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'September',\n        shortName: 'Sep',\n        days: 30,\n      }, {\n        index: 9,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'October',\n        shortName: 'Oct',\n        days: 31,\n      }, {\n        index: 10,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'November',\n        shortName: 'Nov',\n        days: 30,\n      }, {\n        index: 11,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'December',\n        shortName: 'Dec',\n        days: 31,\n      }\n    ];\n  };\n\n})(sn);\n\n","/**********************************************\n* returns function that can be executed only once\n* Result of function execution is cached and can be accesed latter by calling that function\n************************************************/\nsn.once = function(fn) {\n  var result;\n  return function() {\n    if (fn) {\n      result = fn.apply(this, arguments);\n      fn = null;\n    }\n    return result;\n  };\n};\n\n/**********************************************\n* Returns a function, that, as long as it continues to be invoked, will not be triggered\n* Default wait time for debounce is 200ms.\n ************************************************/\nsn.debounce = function(fn, wait) {\n  var timeout;\n  return function() {\n    var callNow = !timeout;\n\n    clearTimeout(timeout);\n    timeout = setTimeout(function() {\n      timeout = null;\n    }, wait);\n\n    if (callNow) { fn.apply(this, arguments); }\n  };\n};\n\n/*************************\n* execute function when condition becomes true\n************************/\nsn.execute = function(executeFn) {\n  return (function() {\n    var tick;\n    var maxTicks;\n\n    function executer(conditionFn) {\n      if (maxTicks < -tick) {\n        return;\n      } else if (!isNaN(maxTicks)) {\n        maxTicks -= tick;\n      }\n\n      conditionFn() ? executeFn() : setTimeout(executer.bind(null, conditionFn), tick);\n    }\n\n    return {\n      when: function(conditionFb, _tick, _maxTicks) {\n        tick = _tick || 5;\n        maxTicks = _maxTicks;\n        executer(conditionFb);\n      }\n\n    };\n  })();\n};\n\n/*****************************\n * sMsg - broadcast messages\n ****************************/\n(function(sn) {\n  var subscribers = {};\n\n  sn.broadcast = function(to) {\n    var callArguments = Array.prototype.slice.call(arguments, 1, arguments.length);\n    for (var i = 0; i < subscribers[to].length; i++) {\n      subscribers[to][i].apply(this, callArguments);\n    }\n  };\n\n  sn.listen = function(subscribe, cb) {\n    subscribers[subscribe] = subscribers[subscribe] || [];\n    subscribers[subscribe].push(cb);\n  };\n\n})(sn);\n","//DeepFreez / DeepSeal\n(function (sn) {\n\n  /**********************************************\n  * Apply Object.freez on object and each children object as deep as it goes.\n  * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n  ************************************************/\n  sn.deepFreez = function deepFreez(obj) {\n    return deepSealOrFreez(obj, Object.freez);\n  };\n\n  /**********************************************\n  * Apply Object.seal on object and each children object as deep as it goes.\n  * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\n  ************************************************/\n  sn.deepSeal = function deepSeal(obj) {\n    return deepSealOrFreez(obj, Object.seal);\n  };\n\n  function deepSealOrFreez(obj, action) {\n    action(obj);\n\n    Object.getOwnPropertyNames(obj).forEach(function (key) {\n      if (obj.hasOwnProperty(key)\n        && obj[key] !== null\n        && (typeof obj[key] === 'object' || typeof obj[key] === 'function')\n        && !Object.isSealed(obj[key]))\n      {\n        deepSealOrFreez(obj[key]);\n      }\n    });\n\n    return obj;\n  }\n\n})(sn);\n\n\n\n/**********************************************\n* Extend object with the properties from other provided objects.\n* In case of same propertie names value from first object will be overriden with the value from second object\n************************************************/\nsn.extend = function() {\n  for(var i=1; i < arguments.length; i++) {\n    Object.getOwnPropertyNames(arguments[i]).forEach(function (key) {\n      if(arguments[i].hasOwnProperty(key)) {\n        arguments[0][key] = arguments[i][key]\n      }\n    });\n  }\n  return arguments[0];\n}\n","sn.replaceAll = function (whatToReplace) {\n  return {\n    with: function (replaceWith) {\n      return typeof sn.__EC__ === 'string'\n        ? sn.__EC__.replace(new RegExp(whatToReplace.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'), replaceWith)\n        : sn.__EC__;\n    }\n  };\n};\n\nsn.capitalize = function (str) {\n  return typeof str === 'string' ? str[(0)].toUpperCase() + str.slice(1) : str;\n};\n\n/***********************************************\n * Below methods has been taken from\n * https://github.com/epeli/underscore.string\n************************************************/\n\n/*\n * test if string contains substring\n * @ignore case - case is ignored on comparation\n * @example capitalize('foo Bar', 'oo'); => 'Foo Bar'; capitalize('FOO Bar', true); => 'Foo bar'\n * https://github.com/epeli/underscore.string\n*/\nsn.contains = function (str1, str2, ignoreCase) {\n  if (ignoreCase === true) {\n    str1 = str1.toLowerCase();\n    str2 = str2.toLowerCase();\n  }\n  return str1.indexOf(str2) !== -1;\n};\n\n/*\n * Break string in array of substring\n * @example: chop(\"whitespace\", 3); => ['whi', 'tes', 'pac', 'e']\n*/\nsn.chop = function (str, step) {\n  if (!str) { return []; }\n  str = String(str);\n  step = ~~step;\n  return step > 0 ? str.match(new RegExp('.{1,' + step + '}', 'g')) : [str];\n};\n\n/*\n* Trim and replace multiple spaces with a single space.\n* @example clean(' foo    bar   '); => 'foo bar'\n*/\nsn.clean = function (str) {\n  return str.trim().replace(/\\s\\s+/g, ' ');\n};\n\n\n/**\n* Truncate string if it exceed max number of characters,\n* apply provided truncate string at the end of truncated string (default: '...')\n*/\nsn.truncate = function (str, length, truncateStr) {\n  truncateStr = truncateStr || '...';\n  length = ~~length;\n  return str.length > length ? str.slice(0, length) + truncateStr : str;\n};\n\n/**********************************************\n* Get the substring of the string between 2 substrings,\nTODO: not documented or tested\n***************************************************/\nsn.between = function (startStr, endStr) {\n  var startIndex = sn.__EC__.indexOf(startStr);\n  var endIndex = sn.__EC__.indexOf(endStr);\n\n  if (startIndex === -1 || startIndex === -1) {\n    return undefined;\n  }\n\n  startIndex += startStr.length;\n  return sn.__EC__.substr(startIndex, endIndex - startIndex);\n};\n"]}