{"version":3,"sources":["sn.js","sn.end.js","sn.array.js","sn.date.js","sn.function.js","sn.is.js","sn.object.js","sn.string.js"],"names":["global","factory","exports","module","define","amd","sn","this","executionContext","__EC__","each","callback","i","l","length","call","iterate","remove","elToRemove","max","pos","indexOf","lastIndexOf","splice","shuffle","temporaryValue","randomIndex","currentIndex","Math","floor","random","getFilledArray","val","len","rv","Array","unique","originalArr","arr","push","first","condition","last","stack","defaultArray","_stack","add","isArray","prototype","apply","pop","peek","array","queue","_queue","addRange","range","shift","internals","getDate","assert","is","date","Date","setLastDayOfMonth","dt","setMonth","getMonth","getLastDayOfMonth","getFullYear","addMilliseconds","milliseconds","setMilliseconds","getMilliseconds","addSeconds","seconds","setSeconds","getSeconds","addMinutes","minutes","setMinutes","getMinutes","addHours","hours","setHours","getHours","addDays","days","setDate","addMonths","months","addYears","years","setFullYear","getMonths","index","month","name","shortName","once","fn","result","arguments","debounce","wait","timeout","callNow","clearTimeout","setTimeout","execute","executeFn","executer","conditionFn","maxTicks","tick","isNaN","bind","when","conditionFb","_tick","_maxTicks","subscribers","broadcast","to","callArguments","slice","listen","subscribe","cb","isString","testVar","isNumber","t2","t1","_EC_","empty","test","key","Object","hasOwnProperty","defined","string","number","boolean","null","undefined","object","function","toString","TypeError","lastDayOfMonth","getTime","deepSealOrFreez","obj","action","getOwnPropertyNames","forEach","isSealed","deepFreez","freez","deepSeal","seal","extend","replaceAll","whatToReplace","with","replaceWith","replace","RegExp","capitalize","str","toUpperCase","contains","str1","str2","ignoreCase","toLowerCase","chop","step","String","match","clean","trim","truncate","truncateStr","alphabetic","re","alphanumeric","numeric","lowercase","uppercase","email","strongpassword","ip"],"mappings":"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","file":"sn.min.js","sourcesContent":["/*****************************************************\n\t  s.js https://github.com/snovakovic/s.js\n    author: stefan.novakovich@gmail.com\n    version: 0.0.1\n ***************************************************/\n(function(global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n      (global.sn = factory());\n} (this, (function() {\n\n  'use strict';\n\n  function sn(executionContext) {\n    sn.__EC__ = executionContext;\n    return sn;\n  }\n\n  //app files will be concatinated here and then this will be closed with sn.end.js\n\n","  return sn;\n})));\n","/**********************************************\n* Loop throught array. this in callback function will ber set to array.\n* @param arr {Array} array we want to iterate\n* @param callback {Function} callback function that will be called on each iteration\n************************************************/\nsn.each = function(callback) {\n  for (var i = 0, l = sn.__EC__.length; i < l; i++) {\n    if (callback.call(sn.__EC__, sn.__EC__[i], i) === false) {\n      break;\n    }\n  }\n\n  return sn;\n};\n\n/**********************************************\n* Iterate specific number of times.\n* @param l {Number} number of times we want to iterate\n* @param callback {Function} callback function that will be called on each iteration\n************************************************/\nsn.iterate = function(l, callback) {\n  for (var i = 0; i < l; i++) {\n    if (callback.call(null, i) === false) {\n      break;\n    }\n  }\n};\n\n/***********************************************\n* Remove all occurrences of element from array\n* @param arr {Array} array from where we want  to remove values\n* @param elToRemove {...} element that we want to remove from array\n* @param max {whole number integer} max number of occurrences to remove. 1 - remove first, -1 remove last.\n* @return {Array} new array without removed values\n***********************************************/\nsn.remove = function(elToRemove, max) {\n  var pos;\n\n  while (pos !== -1 && max !== 0) {\n    if (max) {\n      if (max >= 1) {\n        pos = sn.__EC__.indexOf(elToRemove);\n        max--;\n      } else {\n        pos = sn.__EC__.lastIndexOf(elToRemove);\n        max++;\n      }\n\n    } else {\n      pos = sn.__EC__.indexOf(elToRemove);\n    }\n\n    pos > -1 && sn.__EC__.splice(pos, 1);\n  }\n\n  return sn.__EC__;\n};\n\n/*******************************************************\n* Shuffle values in the array\n* https://github.com/Daplie/knuth-shuffle\n* @param arr {Array} input array that we want to shuffle\n* @return {Array} shuffled array\n********************************************************/\nsn.shuffle = function() {\n  var currentIndex = sn.__EC__.length;\n  var temporaryValue;\n  var randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = sn.__EC__[currentIndex];\n    sn.__EC__[currentIndex] = sn.__EC__[randomIndex];\n    sn.__EC__[randomIndex] = temporaryValue;\n  }\n\n  return sn.__EC__;\n};\n\n/*********************************************\n* Get the new array filled with default values\n* @param val {Any} default array value\n* @return len {Integer} size of the new array\n**********************************************/\nsn.getFilledArray = function(val, len) {\n  var rv = new Array(len);\n  while (--len >= 0) {\n    rv[len] = val;\n  }\n  return rv;\n};\n\n/*************************************************\n* Returns new array containing only unique values from original array\n* Doesn't support nested objects and array\n* @param originalArr {Array} array form where we want to remove duplicate values\n* @return array without duplicate values\n***********************************************/\nsn.unique = function(originalArr) {\n  var arr = [];\n  for (var i = 0; i < originalArr.length; i++) {\n    if (arr.indexOf(originalArr[i]) === -1) {\n      arr.push(originalArr[i]);\n    }\n  }\n  return arr;\n};\n\n/********************************************s\n* Returns first element of array if no condition is passed,\n* else if there is condition returns first element of array that meets condition\n* @param arr {Array} array we want to search in for value\n* @param condition {Function} function that returns true if value is found.\n* @return array item if found or undefined if not found\n**********************************************/\nsn.first = function(arr, condition) {\n  if (arr && arr.length) {\n    if (condition) {\n      for (var i = 0; i < arr.length; i++) {\n        if (condition(arr[i])) {\n          return arr[i];\n        }\n      }\n    } else {\n      return arr[0];\n    }\n  }\n\n  return undefined;\n\n};\n\n/**********************************************************\n* Returns last element of array if no condition is passed,\n* else if there is condition returns last element of array that meets condition\n* @param arr {Array} [optional] array we want to search in for value\n* @param condition {Function} function that returns true if value is found.\n* @return array item if found or undefined if not found\n***********************************************************/\nsn.last = function(arr, condition) {\n  if (arr && arr.length) {\n    if (condition) {\n      for (var i = arr.length - 1; i >= 0; i--) {\n        if (condition(arr[i])) {\n          return arr[i];\n        }\n      }\n    } else {\n      return arr[arr.length - 1];\n    }\n  }\n\n  return undefined;\n\n};\n\n/*********************************************\n * Stack implementation LIFO last in first out\n * @param defaultArray [optional] {Array} default array that will be used as a stack base\n*********************************************/\nsn.stack = function(defaultArray) {\n  return (function() {\n    var _stack = defaultArray || [];\n    return {\n      add: function(val) {\n        Array.isArray(val) ? Array.prototype.push.apply(_stack, val) : _stack.push(val);\n      },\n      remove: function() {\n        return _stack.length ? _stack.pop() : null;\n      },\n      peek: function() {\n        return _stack.length ? _stack[_stack.length - 1] : null;\n      },\n      get array() {\n        return _stack;\n      },\n      get length() {\n        return _stack.length;\n      }\n    };\n  })();\n};\n\n/*********************************************\n* Queue implementation FIFI: first in first out\n * @param defaultArray [optional] {Array} default array that will be used as a queue base\n*********************************************/\nsn.queue = function(defaultArray) {\n  return (function() {\n    var _queue = defaultArray || [];\n    return {\n      add: function(val) {\n        Array.isArray(val) ? Array.prototype.push.apply(_queue, val) : _queue.push(val);\n      },\n      addRange: function(range) {\n        Array.prototype.push.apply(_queue, range);\n      },\n      remove: function() {\n        return _queue.length ? _queue.shift() : null;\n      },\n      peek: function() {\n        return _queue.length ? _queue[0] : null;\n      },\n      get array() {\n        return _queue;\n      },\n      get length() {\n        return _queue.length;\n      }\n    };\n  })();\n};\n","(function (sn) {\n\n  var internals = {\n    getDate: function () {\n      if (sn.__EC__) {\n        sn.assert.is.date(sn.__EC__);\n        return sn.__EC__;\n      }\n\n      return new Date();\n    }\n  };\n\n  /**********************************************\n  * Change provided date so that it point to last day of current month\n  ************************************************/\n  sn.setLastDayOfMonth = function () {\n    var dt = internals.getDate();\n    dt.setMonth(dt.getMonth() + 1, 0);\n    return dt;\n  };\n\n\n  /**********************************************\n  * Check if day in date is last day of month\n  * @param dt {Date} date we want ot check\n  * @return true -> day is last day of month; false - day is not last day of month\n  ************************************************/\n  sn.getLastDayOfMonth = function () {\n    var dt = internals.getDate();\n    return (new Date(dt.getFullYear(), dt.getMonth() + 1, 0)).getDate();\n  };\n\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param milliseconds {Number} +/- milliseconds to add or remove from date\n  ************************************************/\n  sn.addMilliseconds = function (milliseconds) {\n    var dt = internals.getDate();\n    dt.setMilliseconds(dt.getMilliseconds() + milliseconds);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param seconds {Number} +/- seconds to add or remove from date\n  ************************************************/\n  sn.addSeconds = function (seconds) {\n    var dt = internals.getDate();\n    dt.setSeconds(dt.getSeconds() + seconds);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param minutes {Number} +/- minutes to add or remove from date\n  ************************************************/\n  sn.addMinutes = function (minutes) {\n    var dt = internals.getDate();\n    dt.setMinutes(dt.getMinutes() + minutes);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param hours {Number} +/- hours to add or remove from date\n  ************************************************/\n  sn.addHours = function (hours) {\n    var dt = internals.getDate();\n    dt.setHours(dt.getHours() + hours);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param days {Number} +/- days to add or remove from date\n  ************************************************/\n  sn.addDays = function (days) {\n    var dt = internals.getDate();\n    dt.setDate(dt.getDate() + days);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param months {Number} +/- months to add or remove from date\n  ************************************************/\n  sn.addMonths = function (months) {\n    var dt = internals.getDate();\n    dt.setMonth(dt.getMonth() + months);\n    return dt;\n  };\n\n  /**********************************************\n  * Add or remove dates from provided date\n  * @param years {Number} +/- years to add or remove from date\n  ************************************************/\n  sn.addYears = function (years) {\n    var dt = internals.getDate();\n    dt.setFullYear(dt.getFullYear() + years);\n    return dt;\n  };\n\n  /**********************************************\n  * Get the list of english months with fullName, shortName and month index\n  ************************************************/\n  sn.getMonths = function () {\n    return [\n      {\n        index: 0,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'January',\n        shortName: 'Jan',\n        days: 31,\n      }, {\n        index: 1,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'February',\n        shortName: 'Feb',\n        days: [28, 29],\n      }, {\n        index: 2,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'March',\n        shortName: 'Mar',\n        days: 31,\n      }, {\n        index: 3,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'April',\n        shortName: 'Apr',\n        days: 30,\n      }, {\n        index: 4,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'May',\n        shortName: 'May',\n        days: 31,\n      }, {\n        index: 5,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'June',\n        shortName: 'Jun',\n        days: 30,\n      }, {\n        index: 6,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'July',\n        shortName: 'Jul',\n        days: 31,\n      }, {\n        index: 7,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'August',\n        shortName: 'Aug',\n        days: 31,\n      }, {\n        index: 8,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'September',\n        shortName: 'Sep',\n        days: 30,\n      }, {\n        index: 9,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'October',\n        shortName: 'Oct',\n        days: 31,\n      }, {\n        index: 10,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'November',\n        shortName: 'Nov',\n        days: 30,\n      }, {\n        index: 11,\n        get month() {\n          return this.index + 1;\n        },\n        name: 'December',\n        shortName: 'Dec',\n        days: 31,\n      }\n    ];\n  };\n\n})(sn);\n\n","/**********************************************\n* returns function that can be executed only once\n* Result of function execution is cached and can be accesed latter by calling that function\n************************************************/\nsn.once = function(fn) {\n  var result;\n  return function() {\n    if (fn) {\n      result = fn.apply(this, arguments);\n      fn = null;\n    }\n    return result;\n  };\n};\n\n/**********************************************\n* Returns a function, that, as long as it continues to be invoked, will not be triggered\n* Default wait time for debounce is 200ms.\n ************************************************/\nsn.debounce = function(fn, wait) {\n  var timeout;\n  return function() {\n    var callNow = !timeout;\n\n    clearTimeout(timeout);\n    timeout = setTimeout(function() {\n      timeout = null;\n    }, wait);\n\n    if (callNow) { fn.apply(this, arguments); }\n  };\n};\n\n/*************************\n* execute function when condition becomes true\n************************/\nsn.execute = function(executeFn) {\n  return (function() {\n    var tick;\n    var maxTicks;\n\n    function executer(conditionFn) {\n      if (maxTicks < -tick) {\n        return;\n      } else if (!isNaN(maxTicks)) {\n        maxTicks -= tick;\n      }\n\n      conditionFn() ? executeFn() : setTimeout(executer.bind(null, conditionFn), tick);\n    }\n\n    return {\n      when: function(conditionFb, _tick, _maxTicks) {\n        tick = _tick || 5;\n        maxTicks = _maxTicks;\n        executer(conditionFb);\n      }\n\n    };\n  })();\n};\n\n/*****************************\n * sMsg - broadcast messages\n ****************************/\n(function(sn) {\n  var subscribers = {};\n\n  sn.broadcast = function(to) {\n    var callArguments = Array.prototype.slice.call(arguments, 1, arguments.length);\n    for (var i = 0; i < subscribers[to].length; i++) {\n      subscribers[to][i].apply(this, callArguments);\n    }\n  };\n\n  sn.listen = function(subscribe, cb) {\n    subscribers[subscribe] = subscribers[subscribe] || [];\n    subscribers[subscribe].push(cb);\n  };\n\n})(sn);\n","(function (sn) {\n\n  function isString(testVar) {\n    return typeof testVar === 'string';\n  }\n\n  function isNumber(testVar) {\n    //NaN will produce false because NaN !== NaN\n    return typeof testVar === 'number' && testVar === testVar;\n  }\n\n  sn.assert = { is : {} };\n\n  sn.is = function (t2) {\n    var t1 = sn._EC_;\n    if ((isString(t1) || isNumber(t1)) && (isString(t2) || isNumber(t2))) {\n      //this covers coercion between string and number without any gotchas\n      return (typeof t1 === typeof t2)\n        ? t1 === t2\n        : t1 == t2 && t1 !== '' && t2 !== '';\n\n    } else if (t1 == null && t2 == null) {\n      //This covers when vars are eather null or undefined without any gotchas\n      return true;\n    }\n\n    return t1 === t2;\n\n  };\n\n\n  /**\n   * Test if variable has been defined and is not empty,\n   * Following will be treated as false\n   * sn.is.empty(null); => true\n   * sn.is.empty(undefined); => true\n   * sn.is.empty({}); => true\n   * sn.is.empty([]); => true\n   * sn.is.empty(' '); => true\n   * sn.is.empty('\\n\\t'); => true\n   * sn.is.empty(null); => true\n  */\n  sn.is.empty = function (testVar) {\n    if (testVar == null\n      || (typeof testVar === 'string' && (/^\\s*$/).test(testVar))) {\n      return true;\n    }\n\n    if (typeof testVar === 'object') {\n      for (var key in testVar) {\n        if (Object.prototype.hasOwnProperty.call(testVar, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    return false;\n  };\n\n  sn.is.defined = function (testVar) {\n    return testVar == null;\n  };\n\n  /**\n   * VAR type check\n   */\n  sn.is.string = isString;\n\n  sn.is.number = isNumber;\n\n  sn.is.boolean = function (testVar) {\n    return typeof testVar === 'boolean';\n  };\n\n  sn.is.null = function (testVar) {\n    return testVar === null;\n  };\n\n  sn.is.undefined = function (testVar) {\n    typeof testVar === 'undefined';\n  };\n\n  sn.is.object = function (testVar) {\n    return typeof testVar === 'object' && testVar !== null && !Array.isArray(testVar);\n  };\n\n  sn.is.function = function (testVar) {\n    return typeof testVar === 'function';\n  };\n\n  sn.is.array = function (testVar) {\n    return typeof testVar === 'object' && Array.isArray(testVar);\n  };\n\n  sn.is.date = function (testVar) {\n    return Object.prototype.toString.call(testVar) === '[object Date]';\n  };\n\n  sn.assert.is.date = function (testVar) {\n    if (!sn.is.date(testVar)) {\n      throw new TypeError('Date is not valid.');\n    }\n  };\n\n\n  /**********************************************\n  * Check if day in date is last day of month\n  * @return true -> day is last day of month; false - day is not last day of month\n  ************************************************/\n  sn.is.lastDayOfMonth = function () {\n    var test = new Date(sn.__EC__.getTime());\n    test.setDate(test.getDate() + 1);\n    return test.getDate() === 1;\n  };\n\n\n})(sn);\n","//DeepFreez / DeepSeal\n(function (sn) {\n\n  /**********************************************\n  * Apply Object.freez on object and each children object as deep as it goes.\n  * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n  ************************************************/\n  sn.deepFreez = function deepFreez(obj) {\n    return deepSealOrFreez(obj, Object.freez);\n  };\n\n  /**********************************************\n  * Apply Object.seal on object and each children object as deep as it goes.\n  * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\n  ************************************************/\n  sn.deepSeal = function deepSeal(obj) {\n    return deepSealOrFreez(obj, Object.seal);\n  };\n\n  function deepSealOrFreez(obj, action) {\n    action(obj);\n\n    Object.getOwnPropertyNames(obj).forEach(function (key) {\n      if (obj.hasOwnProperty(key)\n        && obj[key] !== null\n        && (typeof obj[key] === 'object' || typeof obj[key] === 'function')\n        && !Object.isSealed(obj[key]))\n      {\n        deepSealOrFreez(obj[key]);\n      }\n    });\n\n    return obj;\n  }\n\n})(sn);\n\n\n\n/**********************************************\n* Extend object with the properties from other provided objects.\n* In case of same propertie names value from first object will be overriden with the value from second object\n************************************************/\nsn.extend = function() {\n  for(var i=1; i < arguments.length; i++) {\n    Object.getOwnPropertyNames(arguments[i]).forEach(function (key) {\n      if(arguments[i].hasOwnProperty(key)) {\n        arguments[0][key] = arguments[i][key]\n      }\n    });\n  }\n  return arguments[0];\n}\n","sn.replaceAll = function(whatToReplace) {\n  return {\n    with: function(replaceWith) {\n      return typeof sn.__EC__ === 'string'\n        ? sn.__EC__.replace(new RegExp(whatToReplace.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'), replaceWith)\n        : sn.__EC__;\n    }\n  }\n};\n\nsn.capitalize = function(str) {\n  return typeof str === 'string' ? str[(0)].toUpperCase() + str.slice(1) : str;\n};\n\n/***********************************************\n * Below methods has been taken from\n * https://github.com/epeli/underscore.string\n************************************************/\n\n/*\n * test if string contains substring\n * @ignore case - case is ignored on comparation\n * @example capitalize('foo Bar', 'oo'); => 'Foo Bar'; capitalize('FOO Bar', true); => 'Foo bar'\n * https://github.com/epeli/underscore.string\n*/\nsn.contains = function(str1, str2, ignoreCase) {\n  if (ignoreCase === true) {\n    str1 = str1.toLowerCase();\n    str2 = str2.toLowerCase();\n  }\n  return str1.indexOf(str2) !== -1;\n};\n\n/*\n * Break string in array of substring\n * @example: chop(\"whitespace\", 3); => ['whi', 'tes', 'pac', 'e']\n*/\nsn.chop = function(str, step) {\n  if (!str) { return []; }\n  str = String(str);\n  step = ~~step;\n  return step > 0 ? str.match(new RegExp('.{1,' + step + '}', 'g')) : [str];\n};\n\n/*\n* Trim and replace multiple spaces with a single space.\n* @example clean(' foo    bar   '); => 'foo bar'\n*/\nsn.clean = function(str) {\n  return str.trim().replace(/\\s\\s+/g, ' ');\n};\n\n\n/**\n* Truncate string if it exceed max number of characters,\n* apply provided truncate string at the end of truncated string (default: '...')\n*/\nsn.truncate = function(str, length, truncateStr) {\n  truncateStr = truncateStr || '...';\n  length = ~~length;\n  return str.length > length ? str.slice(0, length) + truncateStr : str;\n};\n\n/****\n* RegExp tests\n****/\nsn.is.alphabetic = function(str) {\n  var re = /^[a-zA-Z ]*$/;\n  return re.test(str);\n};\n\nsn.is.alphanumeric = function(str) {\n  var re = /^[a-zA-Z0-9 ]*$/;\n  return re.test(str);\n};\n\nsn.is.numeric = function(str) {\n  var re = /^[0-9 ]*$/;\n  return re.test(str);\n};\n\nsn.is.lowercase = function(str) {\n  var re = /^[a-z ]*$/;\n  return re.test(str);\n};\n\nsn.is.uppercase = function(str) {\n  var re = /^[A-Z ]*$/;\n  return re.test(str);\n};\n\nsn.is.email = function(str) {\n  var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(str);\n};\n\nsn.is.strongpassword = function(str) {\n  var re = /^(?=^.{6,}$)((?=.*[A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z]))^.*$/;\n  return re.test(str);\n};\n\nsn.is.ip = function(str) {\n  var re = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n  return re.test(str);\n};\n\n"]}