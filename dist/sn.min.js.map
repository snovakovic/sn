{"version":3,"sources":["sn.js","sn.end.js","sn.array.js","sn.assert.js","sn.date.js","sn.function.js","sn.object.js","sn.string.js"],"names":["global","factory","exports","module","define","amd","sn","this","executionContext","__EC__","each","callback","i","l","length","call","iterate","remove","elToRemove","max","pos","indexOf","lastIndexOf","splice","shuffle","temporaryValue","randomIndex","currentIndex","Math","floor","random","getFilledArray","val","len","rv","Array","unique","originalArr","arr","push","first","condition","last","stack","defaultArray","_stack","add","isArray","prototype","apply","pop","peek","array","queue","_queue","addRange","range","shift","internals","isString","testVar","isNumber","isDate","Object","toString","assert","assertMessage","TypeError","is","t2","t1","empty","test","key","hasOwnProperty","defined","string","number","boolean","null","undefined","object","function","date","not","prop","getDate","Date","setLastDayOfMonth","dt","setMonth","getMonth","lastDayOfMonth","getTime","setDate","getLastDayOfMonth","getFullYear","addMilliseconds","milliseconds","setMilliseconds","getMilliseconds","addSeconds","seconds","setSeconds","getSeconds","addMinutes","minutes","setMinutes","getMinutes","addHours","hours","setHours","getHours","addDays","days","addMonths","months","addYears","years","setFullYear","getMonths","index","month","name","shortName","once","fn","result","arguments","debounce","wait","timeout","callNow","clearTimeout","setTimeout","execute","executeFn","executer","conditionFn","maxTicks","tick","isNaN","bind","when","conditionFb","_tick","_maxTicks","subscribers","broadcast","to","callArguments","slice","listen","subscribe","cb","deepSealOrFreez","obj","action","getOwnPropertyNames","forEach","isSealed","deepFreez","freez","deepSeal","seal","extend","replaceAll","whatToReplace","with","replaceWith","replace","RegExp","capitalize","str","toUpperCase","contains","str1","str2","ignoreCase","toLowerCase","chop","step","String","match","clean","trim","truncate","truncateStr","between","startStr","endStr","startIndex","endIndex","substr"],"mappings":"CAKA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,IACA,kBAAAG,SAAAA,OAAAC,IAAAD,OAAAH,GACAD,EAAAM,GAAAL,KACAM,KAAA,WAEA,YAEA,SAAAD,GAAAE,GAEA,MADAF,GAAAG,OAAAD,EACAF,ECfA,MCKAA,GAAAI,KAAA,SAAAC,GACA,IAAA,GAAAC,GAAA,EAAAC,EAAAP,EAAAG,OAAAK,OAAAF,EAAAC,GACAF,EAAAI,KAAAT,EAAAG,OAAAH,EAAAG,OAAAG,GAAAA,MAAA,EADAA,KAMA,MAAAN,IAQAA,EAAAU,QAAA,SAAAH,EAAAF,GACA,IAAA,GAAAC,GAAA,EAAAA,EAAAC,GACAF,EAAAI,KAAA,KAAAH,MAAA,EADAA,OAcAN,EAAAW,OAAA,SAAAC,EAAAC,GAGA,IAFA,GAAAC,GAEAA,KAAA,GAAA,IAAAD,GACAA,EACAA,GAAA,GACAC,EAAAd,EAAAG,OAAAY,QAAAH,GACAC,MAEAC,EAAAd,EAAAG,OAAAa,YAAAJ,GACAC,KAIAC,EAAAd,EAAAG,OAAAY,QAAAH,GAGAE,GAAA,GAAAd,EAAAG,OAAAc,OAAAH,EAAA,EAGA,OAAAd,GAAAG,QASAH,EAAAkB,QAAA,WAMA,IALA,GACAC,GACAC,EAFAC,EAAArB,EAAAG,OAAAK,OAKA,IAAAa,GAGAD,EAAAE,KAAAC,MAAAD,KAAAE,SAAAH,GACAA,GAAA,EAGAF,EAAAnB,EAAAG,OAAAkB,GACArB,EAAAG,OAAAkB,GAAArB,EAAAG,OAAAiB,GACApB,EAAAG,OAAAiB,GAAAD,CAGA,OAAAnB,GAAAG,QAQAH,EAAAyB,eAAA,SAAAC,EAAAC,GAEA,IADA,GAAAC,GAAA,GAAAC,OAAAF,KACAA,GAAA,GACAC,EAAAD,GAAAD,CAEA,OAAAE,IASA5B,EAAA8B,OAAA,SAAAC,GAEA,IAAA,GADAC,MACA1B,EAAA,EAAAA,EAAAyB,EAAAvB,OAAAF,IACA0B,EAAAjB,QAAAgB,EAAAzB,OAAA,GACA0B,EAAAC,KAAAF,EAAAzB,GAGA,OAAA0B,IAUAhC,EAAAkC,MAAA,SAAAF,EAAAG,GACA,GAAAH,GAAAA,EAAAxB,OAAA,CACA,IAAA2B,EAOA,MAAAH,GAAA,EANA,KAAA,GAAA1B,GAAA,EAAAA,EAAA0B,EAAAxB,OAAAF,IACA,GAAA6B,EAAAH,EAAA1B,IACA,MAAA0B,GAAA1B,KAmBAN,EAAAoC,KAAA,SAAAJ,EAAAG,GACA,GAAAH,GAAAA,EAAAxB,OAAA,CACA,IAAA2B,EAOA,MAAAH,GAAAA,EAAAxB,OAAA,EANA,KAAA,GAAAF,GAAA0B,EAAAxB,OAAA,EAAAF,GAAA,EAAAA,IACA,GAAA6B,EAAAH,EAAA1B,IACA,MAAA0B,GAAA1B,KAgBAN,EAAAqC,MAAA,SAAAC,GACA,MAAA,YACA,GAAAC,GAAAD,KACA,QACAE,IAAA,SAAAd,GACAG,MAAAY,QAAAf,GAAAG,MAAAa,UAAAT,KAAAU,MAAAJ,EAAAb,GAAAa,EAAAN,KAAAP,IAEAf,OAAA,WACA,MAAA4B,GAAA/B,OAAA+B,EAAAK,MAAA,MAEAC,KAAA,WACA,MAAAN,GAAA/B,OAAA+B,EAAAA,EAAA/B,OAAA,GAAA,MAEAsC,GAAAA,SACA,MAAAP,IAEA/B,GAAAA,UACA,MAAA+B,GAAA/B,aAUAR,EAAA+C,MAAA,SAAAT,GACA,MAAA,YACA,GAAAU,GAAAV,KACA,QACAE,IAAA,SAAAd,GACAG,MAAAY,QAAAf,GAAAG,MAAAa,UAAAT,KAAAU,MAAAK,EAAAtB,GAAAsB,EAAAf,KAAAP,IAEAuB,SAAA,SAAAC,GACArB,MAAAa,UAAAT,KAAAU,MAAAK,EAAAE,IAEAvC,OAAA,WACA,MAAAqC,GAAAxC,OAAAwC,EAAAG,QAAA,MAEAN,KAAA,WACA,MAAAG,GAAAxC,OAAAwC,EAAA,GAAA,MAEAF,GAAAA,SACA,MAAAE,IAEAxC,GAAAA,UACA,MAAAwC,GAAAxC,aCrNA,SAAAR,GAEA,GAAAoD,IACAC,SAAA,SAAAC,GACA,MAAA,gBAAAA,IAEAC,SAAA,SAAAD,GAEA,MAAA,gBAAAA,IAAAA,IAAAA,GAEAE,OAAA,SAAAF,GACA,MAAA,kBAAAG,OAAAf,UAAAgB,SAAAjD,KAAA6C,IAEAK,OAAA,SAAAjC,EAAAkC,GACA,GAAAlC,EACA,MAAAA,EAEA,MAAA,IAAAmC,WAAAD,IAcA5D,GAAA8D,GAAA,SAAAC,GACA,GAAAC,GAAAhE,EAAAG,MACA,QAAAiD,EAAAC,SAAAW,IAAAZ,EAAAG,SAAAS,MAAAZ,EAAAC,SAAAU,IAAAX,EAAAG,SAAAQ,UAEAC,UAAAD,GACAC,IAAAD,EACAC,GAAAD,GAAA,KAAAC,GAAA,KAAAD,EAEA,MAAAC,GAAA,MAAAD,GAKAC,IAAAD,GAeA/D,EAAA8D,GAAAG,MAAA,WACA,GAAA,MAAAjE,EAAAG,QACA,gBAAAH,GAAAG,QAAA,QAAA+D,KAAAlE,EAAAG,QACA,OAAA,CAGA,IAAA,gBAAAH,GAAAG,OAAA,CACA,IAAA,GAAAgE,KAAAnE,GAAAG,OACA,GAAAH,EAAAG,OAAAiE,eAAAD,GACA,OAAA,CAGA,QAAA,EAGA,OAAA,GAMAnE,EAAA8D,GAAAO,QAAA,WACA,MAAA,OAAArE,EAAAG,QAMAH,EAAA8D,GAAAQ,OAAA,WACA,MAAAlB,GAAAC,SAAArD,EAAAG,SAGAH,EAAA8D,GAAAS,OAAA,WACA,MAAAnB,GAAAG,SAAAvD,EAAAG,SAGAH,EAAA8D,GAAAU,QAAA,WACA,MAAA,iBAAAxE,GAAAG,QAGAH,EAAA8D,GAAAW,KAAA,WACA,MAAA,QAAAzE,EAAAG,QAGAH,EAAA8D,GAAAY,UAAA,WACA,mBAAA1E,GAAAG,QAGAH,EAAA8D,GAAAa,OAAA,WACA,MAAA,gBAAA3E,GAAAG,QACA,OAAAH,EAAAG,SACA0B,MAAAY,QAAAzC,EAAAG,SAGAH,EAAA8D,GAAAc,SAAA,WACA,MAAA,kBAAA5E,GAAAG,QAGAH,EAAA8D,GAAAhB,MAAA,WACA,MAAA,gBAAA9C,GAAAG,QAAA0B,MAAAY,QAAAzC,EAAAG,SAGAH,EAAA8D,GAAAe,KAAA,WACA,MAAAzB,GAAAI,OAAAxD,EAAAG,SAYAH,EAAA8E,IAAA,SAAApD,GACA,OAAA1B,EAAA8D,GAAApC,IAGA1B,EAAA2D,QACAG,GAAA,SAAApC,GACA,MAAA0B,GAAAO,OAAA3D,EAAA8D,GAAApC,GAAA,6BAEAoD,IAAA,SAAApD,GACA,MAAA0B,GAAAO,QAAA3D,EAAA8D,GAAApC,GAAA,yBAIA,KAAA,GAAAqD,KAAA/E,GAAA8D,GACA9D,EAAA8D,GAAAM,eAAAW,KACA,SAAAA,GACA/E,EAAA8E,IAAAC,GAAA,WACA,OAAA/E,EAAA8D,GAAAiB,MAEA/E,EAAA2D,OAAAG,GAAAiB,GAAA,WACA,MAAA3B,GAAAO,OAAA3D,EAAA8D,GAAAiB,KAAA,yBAAAA,EAAA,MAEA/E,EAAA2D,OAAAmB,IAAAC,GAAA,WACA,MAAA3B,GAAAO,QAAA3D,EAAA8D,GAAAiB,KAAA,qBAAAA,EAAA,OAEAA,IASA/E,GCxKA,SAAAA,GAEA,GAAAoD,IACA4B,QAAA,WACA,MAAAhF,GAAAG,QACAH,EAAA2D,OAAAG,GAAAe,KAAA7E,EAAAG,QACAH,EAAAG,QAGA,GAAA8E,OAOAjF,GAAAkF,kBAAA,WACA,GAAAC,GAAA/B,EAAA4B,SAEA,OADAG,GAAAC,SAAAD,EAAAE,WAAA,EAAA,GACAF,GAQAnF,EAAA8D,GAAAwB,eAAA,WACA,GAAAH,GAAA/B,EAAA4B,UACAd,EAAA,GAAAe,MAAAE,EAAAI,UAEA,OADArB,GAAAsB,QAAAtB,EAAAc,UAAA,GACA,IAAAd,EAAAc,WASAhF,EAAAyF,kBAAA,WACA,GAAAN,GAAA/B,EAAA4B,SACA,OAAA,IAAAC,MAAAE,EAAAO,cAAAP,EAAAE,WAAA,EAAA,GAAAL,WAQAhF,EAAA2F,gBAAA,SAAAC,GACA,GAAAT,GAAA/B,EAAA4B,SAEA,OADAG,GAAAU,gBAAAV,EAAAW,kBAAAF,GACAT,GAOAnF,EAAA+F,WAAA,SAAAC,GACA,GAAAb,GAAA/B,EAAA4B,SAEA,OADAG,GAAAc,WAAAd,EAAAe,aAAAF,GACAb,GAOAnF,EAAAmG,WAAA,SAAAC,GACA,GAAAjB,GAAA/B,EAAA4B,SAEA,OADAG,GAAAkB,WAAAlB,EAAAmB,aAAAF,GACAjB,GAOAnF,EAAAuG,SAAA,SAAAC,GACA,GAAArB,GAAA/B,EAAA4B,SAEA,OADAG,GAAAsB,SAAAtB,EAAAuB,WAAAF,GACArB,GAOAnF,EAAA2G,QAAA,SAAAC,GACA,GAAAzB,GAAA/B,EAAA4B,SAEA,OADAG,GAAAK,QAAAL,EAAAH,UAAA4B,GACAzB,GAOAnF,EAAA6G,UAAA,SAAAC,GACA,GAAA3B,GAAA/B,EAAA4B,SAEA,OADAG,GAAAC,SAAAD,EAAAE,WAAAyB,GACA3B,GAOAnF,EAAA+G,SAAA,SAAAC,GACA,GAAA7B,GAAA/B,EAAA4B,SAEA,OADAG,GAAA8B,YAAA9B,EAAAO,cAAAsB,GACA7B,GAMAnF,EAAAkH,UAAA,WACA,QAEAC,MAAA,EACAC,GAAAA,SACA,MAAAnH,MAAAkH,MAAA,GAEAE,KAAA,UACAC,UAAA,MACAV,KAAA,KAEAO,MAAA,EACAC,GAAAA,SACA,MAAAnH,MAAAkH,MAAA,GAEAE,KAAA,WACAC,UAAA,MACAV,MAAA,GAAA,MAEAO,MAAA,EACAC,GAAAA,SACA,MAAAnH,MAAAkH,MAAA,GAEAE,KAAA,QACAC,UAAA,MACAV,KAAA,KAEAO,MAAA,EACAC,GAAAA,SACA,MAAAnH,MAAAkH,MAAA,GAEAE,KAAA,QACAC,UAAA,MACAV,KAAA,KAEAO,MAAA,EACAC,GAAAA,SACA,MAAAnH,MAAAkH,MAAA,GAEAE,KAAA,MACAC,UAAA,MACAV,KAAA,KAEAO,MAAA,EACAC,GAAAA,SACA,MAAAnH,MAAAkH,MAAA,GAEAE,KAAA,OACAC,UAAA,MACAV,KAAA,KAEAO,MAAA,EACAC,GAAAA,SACA,MAAAnH,MAAAkH,MAAA,GAEAE,KAAA,OACAC,UAAA,MACAV,KAAA,KAEAO,MAAA,EACAC,GAAAA,SACA,MAAAnH,MAAAkH,MAAA,GAEAE,KAAA,SACAC,UAAA,MACAV,KAAA,KAEAO,MAAA,EACAC,GAAAA,SACA,MAAAnH,MAAAkH,MAAA,GAEAE,KAAA,YACAC,UAAA,MACAV,KAAA,KAEAO,MAAA,EACAC,GAAAA,SACA,MAAAnH,MAAAkH,MAAA,GAEAE,KAAA,UACAC,UAAA,MACAV,KAAA,KAEAO,MAAA,GACAC,GAAAA,SACA,MAAAnH,MAAAkH,MAAA,GAEAE,KAAA,WACAC,UAAA,MACAV,KAAA,KAEAO,MAAA,GACAC,GAAAA,SACA,MAAAnH,MAAAkH,MAAA,GAEAE,KAAA,WACAC,UAAA,MACAV,KAAA,OAKA5G,GCzNAA,EAAAuH,KAAA,SAAAC,GACA,GAAAC,EACA,OAAA,YAKA,MAJAD,KACAC,EAAAD,EAAA7E,MAAA1C,KAAAyH,WACAF,EAAA,MAEAC,IAQAzH,EAAA2H,SAAA,SAAAH,EAAAI,GACA,GAAAC,EACA,OAAA,YACA,GAAAC,IAAAD,CAEAE,cAAAF,GACAA,EAAAG,WAAA,WACAH,EAAA,MACAD,GAEAE,GAAAN,EAAA7E,MAAA1C,KAAAyH,aAOA1H,EAAAiI,QAAA,SAAAC,GACA,MAAA,YAIA,QAAAC,GAAAC,GACAC,GAAAC,IAEAC,MAAAF,KACAA,GAAAC,GAGAF,IAAAF,IAAAF,WAAAG,EAAAK,KAAA,KAAAJ,GAAAE,IAVA,GAAAA,GACAD,CAYA,QACAI,KAAA,SAAAC,EAAAC,EAAAC,GACAN,EAAAK,GAAA,EACAN,EAAAO,EACAT,EAAAO,SAUA,SAAA1I,GACA,GAAA6I,KAEA7I,GAAA8I,UAAA,SAAAC,GAEA,IAAA,GADAC,GAAAnH,MAAAa,UAAAuG,MAAAxI,KAAAiH,UAAA,EAAAA,UAAAlH,QACAF,EAAA,EAAAA,EAAAuI,EAAAE,GAAAvI,OAAAF,IACAuI,EAAAE,GAAAzI,GAAAqC,MAAA1C,KAAA+I,IAIAhJ,EAAAkJ,OAAA,SAAAC,EAAAC,GACAP,EAAAM,GAAAN,EAAAM,OACAN,EAAAM,GAAAlH,KAAAmH,KAGApJ,GC/EA,SAAAA,GAkBA,QAAAqJ,GAAAC,EAAAC,GAaA,MAZAA,GAAAD,GAEA7F,OAAA+F,oBAAAF,GAAAG,QAAA,SAAAtF,IACAmF,EAAAlF,eAAAD,IACA,OAAAmF,EAAAnF,IACA,gBAAAmF,GAAAnF,IAAA,kBAAAmF,GAAAnF,IACAV,OAAAiG,SAAAJ,EAAAnF,KAEAkF,EAAAC,EAAAnF,MAIAmF,EAzBAtJ,EAAA2J,UAAA,SAAAL,GACA,MAAAD,GAAAC,EAAA7F,OAAAmG,QAOA5J,EAAA6J,SAAA,SAAAP,GACA,MAAAD,GAAAC,EAAA7F,OAAAqG,QAmBA9J,GAQAA,EAAA+J,OAAA,WACA,IAAA,GAAAzJ,GAAA,EAAAA,EAAAoH,UAAAlH,OAAAF,IACAmD,OAAA+F,oBAAA9B,UAAApH,IAAAmJ,QAAA,SAAAtF,GACAuD,UAAApH,GAAA8D,eAAAD,KACAuD,UAAA,GAAAvD,GAAAuD,UAAApH,GAAA6D,KAIA,OAAAuD,WAAA,ICnDA1H,EAAAgK,WAAA,SAAAC,GACA,OACAC,KAAA,SAAAC,GACA,MAAA,gBAAAnK,GAAAG,OACAH,EAAAG,OAAAiK,QAAA,GAAAC,QAAAJ,EAAAG,QAAA,yBAAA,QAAA,KAAAD,GACAnK,EAAAG,UAKAH,EAAAsK,WAAA,SAAAC,GACA,MAAA,gBAAAA,GAAAA,EAAA,GAAAC,cAAAD,EAAAtB,MAAA,GAAAsB,GAcAvK,EAAAyK,SAAA,SAAAC,EAAAC,EAAAC,GAKA,MAJAA,MAAA,IACAF,EAAAA,EAAAG,cACAF,EAAAA,EAAAE,eAEAH,EAAA3J,QAAA4J,MAAA,GAOA3K,EAAA8K,KAAA,SAAAP,EAAAQ,GACA,MAAAR,IACAA,EAAAS,OAAAT,GACAQ,IAAAA,EACAA,EAAA,EAAAR,EAAAU,MAAA,GAAAZ,QAAA,OAAAU,EAAA,IAAA,OAAAR,QAOAvK,EAAAkL,MAAA,SAAAX,GACA,MAAAA,GAAAY,OAAAf,QAAA,SAAA,MAQApK,EAAAoL,SAAA,SAAAb,EAAA/J,EAAA6K,GAGA,MAFAA,GAAAA,GAAA,MACA7K,IAAAA,EACA+J,EAAA/J,OAAAA,EAAA+J,EAAAtB,MAAA,EAAAzI,GAAA6K,EAAAd,GAOAvK,EAAAsL,QAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAzL,EAAAG,OAAAY,QAAAwK,GACAG,EAAA1L,EAAAG,OAAAY,QAAAyK,EAEA,IAAAC,KAAA,GAAAA,KAAA,EAKA,MADAA,IAAAF,EAAA/K,OACAR,EAAAG,OAAAwL,OAAAF,EAAAC,EAAAD,IN5EAzL","file":"sn.min.js","sourcesContent":["/*****************************************************\r\n\t  s.js https://github.com/snovakovic/s.js\r\n    author: stefan.novakovich@gmail.com\r\n    version: 0.0.1\r\n ***************************************************/\r\n(function(global, factory) {\r\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n    typeof define === 'function' && define.amd ? define(factory) :\r\n      (global.sn = factory());\r\n} (this, (function() {\r\n\r\n  'use strict';\r\n\r\n  function sn(executionContext) {\r\n    sn.__EC__ = executionContext;\r\n    return sn;\r\n  }\r\n\r\n  //app files will be concatinated here and then this will be closed with sn.end.js\r\n\r\n","  return sn;\r\n})));\r\n","/**********************************************\r\n* Loop throught array. this in callback function will ber set to array.\r\n* @param arr {Array} array we want to iterate\r\n* @param callback {Function} callback function that will be called on each iteration\r\n************************************************/\r\nsn.each = function(callback) {\r\n  for (var i = 0, l = sn.__EC__.length; i < l; i++) {\r\n    if (callback.call(sn.__EC__, sn.__EC__[i], i) === false) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  return sn;\r\n};\r\n\r\n/**********************************************\r\n* Iterate specific number of times.\r\n* @param l {Number} number of times we want to iterate\r\n* @param callback {Function} callback function that will be called on each iteration\r\n************************************************/\r\nsn.iterate = function(l, callback) {\r\n  for (var i = 0; i < l; i++) {\r\n    if (callback.call(null, i) === false) {\r\n      break;\r\n    }\r\n  }\r\n};\r\n\r\n/***********************************************\r\n* Remove all occurrences of element from array\r\n* @param arr {Array} array from where we want  to remove values\r\n* @param elToRemove {...} element that we want to remove from array\r\n* @param max {whole number integer} max number of occurrences to remove. 1 - remove first, -1 remove last.\r\n* @return {Array} new array without removed values\r\n***********************************************/\r\nsn.remove = function(elToRemove, max) {\r\n  var pos;\r\n\r\n  while (pos !== -1 && max !== 0) {\r\n    if (max) {\r\n      if (max >= 1) {\r\n        pos = sn.__EC__.indexOf(elToRemove);\r\n        max--;\r\n      } else {\r\n        pos = sn.__EC__.lastIndexOf(elToRemove);\r\n        max++;\r\n      }\r\n\r\n    } else {\r\n      pos = sn.__EC__.indexOf(elToRemove);\r\n    }\r\n\r\n    pos > -1 && sn.__EC__.splice(pos, 1);\r\n  }\r\n\r\n  return sn.__EC__;\r\n};\r\n\r\n/*******************************************************\r\n* Shuffle values in the array\r\n* https://github.com/Daplie/knuth-shuffle\r\n* @param arr {Array} input array that we want to shuffle\r\n* @return {Array} shuffled array\r\n********************************************************/\r\nsn.shuffle = function() {\r\n  var currentIndex = sn.__EC__.length;\r\n  var temporaryValue;\r\n  var randomIndex;\r\n\r\n  // While there remain elements to shuffle...\r\n  while (0 !== currentIndex) {\r\n\r\n    // Pick a remaining element...\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    // And swap it with the current element.\r\n    temporaryValue = sn.__EC__[currentIndex];\r\n    sn.__EC__[currentIndex] = sn.__EC__[randomIndex];\r\n    sn.__EC__[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return sn.__EC__;\r\n};\r\n\r\n/*********************************************\r\n* Get the new array filled with default values\r\n* @param val {Any} default array value\r\n* @return len {Integer} size of the new array\r\n**********************************************/\r\nsn.getFilledArray = function(val, len) {\r\n  var rv = new Array(len);\r\n  while (--len >= 0) {\r\n    rv[len] = val;\r\n  }\r\n  return rv;\r\n};\r\n\r\n/*************************************************\r\n* Returns new array containing only unique values from original array\r\n* Doesn't support nested objects and array\r\n* @param originalArr {Array} array form where we want to remove duplicate values\r\n* @return array without duplicate values\r\n***********************************************/\r\nsn.unique = function(originalArr) {\r\n  var arr = [];\r\n  for (var i = 0; i < originalArr.length; i++) {\r\n    if (arr.indexOf(originalArr[i]) === -1) {\r\n      arr.push(originalArr[i]);\r\n    }\r\n  }\r\n  return arr;\r\n};\r\n\r\n/********************************************s\r\n* Returns first element of array if no condition is passed,\r\n* else if there is condition returns first element of array that meets condition\r\n* @param arr {Array} array we want to search in for value\r\n* @param condition {Function} function that returns true if value is found.\r\n* @return array item if found or undefined if not found\r\n**********************************************/\r\nsn.first = function(arr, condition) {\r\n  if (arr && arr.length) {\r\n    if (condition) {\r\n      for (var i = 0; i < arr.length; i++) {\r\n        if (condition(arr[i])) {\r\n          return arr[i];\r\n        }\r\n      }\r\n    } else {\r\n      return arr[0];\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n\r\n};\r\n\r\n/**********************************************************\r\n* Returns last element of array if no condition is passed,\r\n* else if there is condition returns last element of array that meets condition\r\n* @param arr {Array} [optional] array we want to search in for value\r\n* @param condition {Function} function that returns true if value is found.\r\n* @return array item if found or undefined if not found\r\n***********************************************************/\r\nsn.last = function(arr, condition) {\r\n  if (arr && arr.length) {\r\n    if (condition) {\r\n      for (var i = arr.length - 1; i >= 0; i--) {\r\n        if (condition(arr[i])) {\r\n          return arr[i];\r\n        }\r\n      }\r\n    } else {\r\n      return arr[arr.length - 1];\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n\r\n};\r\n\r\n/*********************************************\r\n * Stack implementation LIFO last in first out\r\n * @param defaultArray [optional] {Array} default array that will be used as a stack base\r\n*********************************************/\r\nsn.stack = function(defaultArray) {\r\n  return (function() {\r\n    var _stack = defaultArray || [];\r\n    return {\r\n      add: function(val) {\r\n        Array.isArray(val) ? Array.prototype.push.apply(_stack, val) : _stack.push(val);\r\n      },\r\n      remove: function() {\r\n        return _stack.length ? _stack.pop() : null;\r\n      },\r\n      peek: function() {\r\n        return _stack.length ? _stack[_stack.length - 1] : null;\r\n      },\r\n      get array() {\r\n        return _stack;\r\n      },\r\n      get length() {\r\n        return _stack.length;\r\n      }\r\n    };\r\n  })();\r\n};\r\n\r\n/*********************************************\r\n* Queue implementation FIFI: first in first out\r\n * @param defaultArray [optional] {Array} default array that will be used as a queue base\r\n*********************************************/\r\nsn.queue = function(defaultArray) {\r\n  return (function() {\r\n    var _queue = defaultArray || [];\r\n    return {\r\n      add: function(val) {\r\n        Array.isArray(val) ? Array.prototype.push.apply(_queue, val) : _queue.push(val);\r\n      },\r\n      addRange: function(range) {\r\n        Array.prototype.push.apply(_queue, range);\r\n      },\r\n      remove: function() {\r\n        return _queue.length ? _queue.shift() : null;\r\n      },\r\n      peek: function() {\r\n        return _queue.length ? _queue[0] : null;\r\n      },\r\n      get array() {\r\n        return _queue;\r\n      },\r\n      get length() {\r\n        return _queue.length;\r\n      }\r\n    };\r\n  })();\r\n};\r\n","(function (sn) {\n\n  var internals = {\n    isString: function (testVar) {\n      return typeof testVar === 'string';\n    },\n    isNumber: function (testVar) {\n      //NaN will produce false because NaN !== NaN\n      return typeof testVar === 'number' && testVar === testVar;\n    },\n    isDate: function (testVar) {\n      return Object.prototype.toString.call(testVar) === '[object Date]';\n    },\n    assert: function (val, assertMessage) {\n      if (val) {\n        return val;\n      }\n      throw new TypeError(assertMessage);\n    }\n\n  };\n\n\n  //PUBLIC\n\n  /****************************************\n  * Safely check if two variables are the same without JS coercion gotchas\n  * == is used when comparing string and numbers (with exception for emptySting == 0 which is false as it should be)\n  * == is used for compering null and undefined\n  * for everything else === is used.\n  * ********************************* */\n  sn.is = function (t2) {\n    var t1 = sn.__EC__;\n    if ((internals.isString(t1) || internals.isNumber(t1)) && (internals.isString(t2) || internals.isNumber(t2))) {\n      //this covers coercion between string and number without any gotchas\n      return (typeof t1 === typeof t2)\n        ? t1 === t2\n        : t1 == t2 && t1 !== '' && t2 !== '';\n\n    } else if (t1 == null && t2 == null) {\n      //This covers when vars are either null or undefined without any gotchas\n      return true;\n    }\n\n    return t1 === t2;\n\n  };\n\n\n  /****************************************************\n   * Test if variable has been defined and is not empty,\n   * Following will be treated as false\n   * sn(null).is.empty(); => true\n   * sn(undefined).is.empty(); => true\n   * sn({}).is.empty(); => true\n   * sn([]).is.empty(); => true\n   * sn(' ').is.empty(); => true\n   * sn('\\n\\t').is.empty(); => true\n  ********************************************************/\n  sn.is.empty = function () {\n    if (sn.__EC__ == null\n      || (typeof sn.__EC__ === 'string' && (/^\\s*$/).test(sn.__EC__))) {\n      return true;\n    }\n\n    if (typeof sn.__EC__ === 'object') {\n      for (var key in sn.__EC__) {\n        if (sn.__EC__.hasOwnProperty(key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    return false;\n  };\n\n  /**********************************************\n  * Check if variable is defined. Variable is consider defined if it's not null or undefined\n  ************************************************/\n  sn.is.defined = function () {\n    return sn.__EC__ == null;\n  };\n\n  /***************************************\n   * START: data type checks\n   **************************************/\n  sn.is.string = function () {\n    return internals.isString(sn.__EC__);\n  };\n\n  sn.is.number = function () {\n    return internals.isNumber(sn.__EC__);\n  };\n\n  sn.is.boolean = function () {\n    return typeof sn.__EC__ === 'boolean';\n  };\n\n  sn.is.null = function () {\n    return sn.__EC__ === null;\n  };\n\n  sn.is.undefined = function () {\n    typeof sn.__EC__ === 'undefined';\n  };\n\n  sn.is.object = function () {\n    return typeof sn.__EC__ === 'object'\n      && sn.__EC__ !== null\n      && !Array.isArray(sn.__EC__);\n  };\n\n  sn.is.function = function () {\n    return typeof sn.__EC__ === 'function';\n  };\n\n  sn.is.array = function () {\n    return typeof sn.__EC__ === 'object' && Array.isArray(sn.__EC__);\n  };\n\n  sn.is.date = function () {\n    return internals.isDate(sn.__EC__);\n  };\n\n  /***************************************\n  * END: data type checks\n  **************************************/\n\n\n\n  /*************************************\n  * START: ASSERT/NOT MODULE DEFINITION\n  **************************************/\n  sn.not = function (val) {\n    return !sn.is(val);\n  };\n\n  sn.assert = {\n    is: function (val) {\n      return internals.assert(sn.is(val), 'Values are not the same.');\n    },\n    not: function (val) {\n      return internals.assert(!sn.is(val), 'Values are the same.');\n    }\n  };\n\n  for (var prop in sn.is) {\n    if (sn.is.hasOwnProperty(prop)) {\n      (function (prop) {\n        sn.not[prop] = function () {\n          return !sn.is[prop]();\n        };\n        sn.assert.is[prop] = function () {\n          return internals.assert(sn.is[prop](), 'Provided value is not ' + prop + '.');\n        };\n        sn.assert.not[prop] = function () {\n          return internals.assert(!sn.is[prop](), 'Provided value is ' + prop + '.');\n        };\n      })(prop);\n    }\n  }\n\n  /*************************************\n  * END: ASSERT MODULE DEFINITION\n  **************************************/\n\n\n})(sn);\n","(function (sn) {\r\n\r\n  var internals = {\r\n    getDate: function () {\r\n      if (sn.__EC__) {\r\n        sn.assert.is.date(sn.__EC__);\r\n        return sn.__EC__;\r\n      }\r\n\r\n      return new Date();\r\n    }\r\n  };\r\n\r\n  /**********************************************\r\n  * Change provided date so that it point to last day of current month\r\n  ************************************************/\r\n  sn.setLastDayOfMonth = function () {\r\n    var dt = internals.getDate();\r\n    dt.setMonth(dt.getMonth() + 1, 0);\r\n    return dt;\r\n  };\r\n\r\n\r\n  /**********************************************\r\n  * Check if day in date is last day of month\r\n  * @return true -> day is last day of month; false - day is not last day of month\r\n  ************************************************/\r\n  sn.is.lastDayOfMonth = function () {\r\n    var dt = internals.getDate();\r\n    var test = new Date(dt.getTime());\r\n    test.setDate(test.getDate() + 1);\r\n    return test.getDate() === 1;\r\n  };\r\n\r\n\r\n  /**********************************************\r\n  * Check if day in date is last day of month\r\n  * @param dt {Date} date we want ot check\r\n  * @return true -> day is last day of month; false - day is not last day of month\r\n  ************************************************/\r\n  sn.getLastDayOfMonth = function () {\r\n    var dt = internals.getDate();\r\n    return (new Date(dt.getFullYear(), dt.getMonth() + 1, 0)).getDate();\r\n  };\r\n\r\n\r\n  /**********************************************\r\n  * Add or remove dates from provided date\r\n  * @param milliseconds {Number} +/- milliseconds to add or remove from date\r\n  ************************************************/\r\n  sn.addMilliseconds = function (milliseconds) {\r\n    var dt = internals.getDate();\r\n    dt.setMilliseconds(dt.getMilliseconds() + milliseconds);\r\n    return dt;\r\n  };\r\n\r\n  /**********************************************\r\n  * Add or remove dates from provided date\r\n  * @param seconds {Number} +/- seconds to add or remove from date\r\n  ************************************************/\r\n  sn.addSeconds = function (seconds) {\r\n    var dt = internals.getDate();\r\n    dt.setSeconds(dt.getSeconds() + seconds);\r\n    return dt;\r\n  };\r\n\r\n  /**********************************************\r\n  * Add or remove dates from provided date\r\n  * @param minutes {Number} +/- minutes to add or remove from date\r\n  ************************************************/\r\n  sn.addMinutes = function (minutes) {\r\n    var dt = internals.getDate();\r\n    dt.setMinutes(dt.getMinutes() + minutes);\r\n    return dt;\r\n  };\r\n\r\n  /**********************************************\r\n  * Add or remove dates from provided date\r\n  * @param hours {Number} +/- hours to add or remove from date\r\n  ************************************************/\r\n  sn.addHours = function (hours) {\r\n    var dt = internals.getDate();\r\n    dt.setHours(dt.getHours() + hours);\r\n    return dt;\r\n  };\r\n\r\n  /**********************************************\r\n  * Add or remove dates from provided date\r\n  * @param days {Number} +/- days to add or remove from date\r\n  ************************************************/\r\n  sn.addDays = function (days) {\r\n    var dt = internals.getDate();\r\n    dt.setDate(dt.getDate() + days);\r\n    return dt;\r\n  };\r\n\r\n  /**********************************************\r\n  * Add or remove dates from provided date\r\n  * @param months {Number} +/- months to add or remove from date\r\n  ************************************************/\r\n  sn.addMonths = function (months) {\r\n    var dt = internals.getDate();\r\n    dt.setMonth(dt.getMonth() + months);\r\n    return dt;\r\n  };\r\n\r\n  /**********************************************\r\n  * Add or remove dates from provided date\r\n  * @param years {Number} +/- years to add or remove from date\r\n  ************************************************/\r\n  sn.addYears = function (years) {\r\n    var dt = internals.getDate();\r\n    dt.setFullYear(dt.getFullYear() + years);\r\n    return dt;\r\n  };\r\n\r\n  /**********************************************\r\n  * Get the list of english months with fullName, shortName and month index\r\n  ************************************************/\r\n  sn.getMonths = function () {\r\n    return [\r\n      {\r\n        index: 0,\r\n        get month() {\r\n          return this.index + 1;\r\n        },\r\n        name: 'January',\r\n        shortName: 'Jan',\r\n        days: 31,\r\n      }, {\r\n        index: 1,\r\n        get month() {\r\n          return this.index + 1;\r\n        },\r\n        name: 'February',\r\n        shortName: 'Feb',\r\n        days: [28, 29],\r\n      }, {\r\n        index: 2,\r\n        get month() {\r\n          return this.index + 1;\r\n        },\r\n        name: 'March',\r\n        shortName: 'Mar',\r\n        days: 31,\r\n      }, {\r\n        index: 3,\r\n        get month() {\r\n          return this.index + 1;\r\n        },\r\n        name: 'April',\r\n        shortName: 'Apr',\r\n        days: 30,\r\n      }, {\r\n        index: 4,\r\n        get month() {\r\n          return this.index + 1;\r\n        },\r\n        name: 'May',\r\n        shortName: 'May',\r\n        days: 31,\r\n      }, {\r\n        index: 5,\r\n        get month() {\r\n          return this.index + 1;\r\n        },\r\n        name: 'June',\r\n        shortName: 'Jun',\r\n        days: 30,\r\n      }, {\r\n        index: 6,\r\n        get month() {\r\n          return this.index + 1;\r\n        },\r\n        name: 'July',\r\n        shortName: 'Jul',\r\n        days: 31,\r\n      }, {\r\n        index: 7,\r\n        get month() {\r\n          return this.index + 1;\r\n        },\r\n        name: 'August',\r\n        shortName: 'Aug',\r\n        days: 31,\r\n      }, {\r\n        index: 8,\r\n        get month() {\r\n          return this.index + 1;\r\n        },\r\n        name: 'September',\r\n        shortName: 'Sep',\r\n        days: 30,\r\n      }, {\r\n        index: 9,\r\n        get month() {\r\n          return this.index + 1;\r\n        },\r\n        name: 'October',\r\n        shortName: 'Oct',\r\n        days: 31,\r\n      }, {\r\n        index: 10,\r\n        get month() {\r\n          return this.index + 1;\r\n        },\r\n        name: 'November',\r\n        shortName: 'Nov',\r\n        days: 30,\r\n      }, {\r\n        index: 11,\r\n        get month() {\r\n          return this.index + 1;\r\n        },\r\n        name: 'December',\r\n        shortName: 'Dec',\r\n        days: 31,\r\n      }\r\n    ];\r\n  };\r\n\r\n})(sn);\r\n\r\n","/**********************************************\r\n* returns function that can be executed only once\r\n* Result of function execution is cached and can be accesed latter by calling that function\r\n************************************************/\r\nsn.once = function(fn) {\r\n  var result;\r\n  return function() {\r\n    if (fn) {\r\n      result = fn.apply(this, arguments);\r\n      fn = null;\r\n    }\r\n    return result;\r\n  };\r\n};\r\n\r\n/**********************************************\r\n* Returns a function, that, as long as it continues to be invoked, will not be triggered\r\n* Default wait time for debounce is 200ms.\r\n ************************************************/\r\nsn.debounce = function(fn, wait) {\r\n  var timeout;\r\n  return function() {\r\n    var callNow = !timeout;\r\n\r\n    clearTimeout(timeout);\r\n    timeout = setTimeout(function() {\r\n      timeout = null;\r\n    }, wait);\r\n\r\n    if (callNow) { fn.apply(this, arguments); }\r\n  };\r\n};\r\n\r\n/*************************\r\n* execute function when condition becomes true\r\n************************/\r\nsn.execute = function(executeFn) {\r\n  return (function() {\r\n    var tick;\r\n    var maxTicks;\r\n\r\n    function executer(conditionFn) {\r\n      if (maxTicks < -tick) {\r\n        return;\r\n      } else if (!isNaN(maxTicks)) {\r\n        maxTicks -= tick;\r\n      }\r\n\r\n      conditionFn() ? executeFn() : setTimeout(executer.bind(null, conditionFn), tick);\r\n    }\r\n\r\n    return {\r\n      when: function(conditionFb, _tick, _maxTicks) {\r\n        tick = _tick || 5;\r\n        maxTicks = _maxTicks;\r\n        executer(conditionFb);\r\n      }\r\n\r\n    };\r\n  })();\r\n};\r\n\r\n/*****************************\r\n * sMsg - broadcast messages\r\n ****************************/\r\n(function(sn) {\r\n  var subscribers = {};\r\n\r\n  sn.broadcast = function(to) {\r\n    var callArguments = Array.prototype.slice.call(arguments, 1, arguments.length);\r\n    for (var i = 0; i < subscribers[to].length; i++) {\r\n      subscribers[to][i].apply(this, callArguments);\r\n    }\r\n  };\r\n\r\n  sn.listen = function(subscribe, cb) {\r\n    subscribers[subscribe] = subscribers[subscribe] || [];\r\n    subscribers[subscribe].push(cb);\r\n  };\r\n\r\n})(sn);\r\n","//DeepFreez / DeepSeal\r\n(function (sn) {\r\n\r\n  /**********************************************\r\n  * Apply Object.freez on object and each children object as deep as it goes.\r\n  * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\r\n  ************************************************/\r\n  sn.deepFreez = function deepFreez(obj) {\r\n    return deepSealOrFreez(obj, Object.freez);\r\n  };\r\n\r\n  /**********************************************\r\n  * Apply Object.seal on object and each children object as deep as it goes.\r\n  * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/seal\r\n  ************************************************/\r\n  sn.deepSeal = function deepSeal(obj) {\r\n    return deepSealOrFreez(obj, Object.seal);\r\n  };\r\n\r\n  function deepSealOrFreez(obj, action) {\r\n    action(obj);\r\n\r\n    Object.getOwnPropertyNames(obj).forEach(function (key) {\r\n      if (obj.hasOwnProperty(key)\r\n        && obj[key] !== null\r\n        && (typeof obj[key] === 'object' || typeof obj[key] === 'function')\r\n        && !Object.isSealed(obj[key]))\r\n      {\r\n        deepSealOrFreez(obj[key]);\r\n      }\r\n    });\r\n\r\n    return obj;\r\n  }\r\n\r\n})(sn);\r\n\r\n\r\n\r\n/**********************************************\r\n* Extend object with the properties from other provided objects.\r\n* In case of same propertie names value from first object will be overriden with the value from second object\r\n************************************************/\r\nsn.extend = function() {\r\n  for(var i=1; i < arguments.length; i++) {\r\n    Object.getOwnPropertyNames(arguments[i]).forEach(function (key) {\r\n      if(arguments[i].hasOwnProperty(key)) {\r\n        arguments[0][key] = arguments[i][key]\r\n      }\r\n    });\r\n  }\r\n  return arguments[0];\r\n}\r\n","sn.replaceAll = function (whatToReplace) {\r\n  return {\r\n    with: function (replaceWith) {\r\n      return typeof sn.__EC__ === 'string'\r\n        ? sn.__EC__.replace(new RegExp(whatToReplace.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), 'g'), replaceWith)\r\n        : sn.__EC__;\r\n    }\r\n  };\r\n};\r\n\r\nsn.capitalize = function (str) {\r\n  return typeof str === 'string' ? str[(0)].toUpperCase() + str.slice(1) : str;\r\n};\r\n\r\n/***********************************************\r\n * Below methods has been taken from\r\n * https://github.com/epeli/underscore.string\r\n************************************************/\r\n\r\n/*\r\n * test if string contains substring\r\n * @ignore case - case is ignored on comparation\r\n * @example capitalize('foo Bar', 'oo'); => 'Foo Bar'; capitalize('FOO Bar', true); => 'Foo bar'\r\n * https://github.com/epeli/underscore.string\r\n*/\r\nsn.contains = function (str1, str2, ignoreCase) {\r\n  if (ignoreCase === true) {\r\n    str1 = str1.toLowerCase();\r\n    str2 = str2.toLowerCase();\r\n  }\r\n  return str1.indexOf(str2) !== -1;\r\n};\r\n\r\n/*\r\n * Break string in array of substring\r\n * @example: chop(\"whitespace\", 3); => ['whi', 'tes', 'pac', 'e']\r\n*/\r\nsn.chop = function (str, step) {\r\n  if (!str) { return []; }\r\n  str = String(str);\r\n  step = ~~step;\r\n  return step > 0 ? str.match(new RegExp('.{1,' + step + '}', 'g')) : [str];\r\n};\r\n\r\n/*\r\n* Trim and replace multiple spaces with a single space.\r\n* @example clean(' foo    bar   '); => 'foo bar'\r\n*/\r\nsn.clean = function (str) {\r\n  return str.trim().replace(/\\s\\s+/g, ' ');\r\n};\r\n\r\n\r\n/**\r\n* Truncate string if it exceed max number of characters,\r\n* apply provided truncate string at the end of truncated string (default: '...')\r\n*/\r\nsn.truncate = function (str, length, truncateStr) {\r\n  truncateStr = truncateStr || '...';\r\n  length = ~~length;\r\n  return str.length > length ? str.slice(0, length) + truncateStr : str;\r\n};\r\n\r\n/**********************************************\r\n* Get the substring of the string between 2 substrings,\r\nTODO: not documented or tested\r\n***************************************************/\r\nsn.between = function (startStr, endStr) {\r\n  var startIndex = sn.__EC__.indexOf(startStr);\r\n  var endIndex = sn.__EC__.indexOf(endStr);\r\n\r\n  if (startIndex === -1 || startIndex === -1) {\r\n    return undefined;\r\n  }\r\n\r\n  startIndex += startStr.length;\r\n  return sn.__EC__.substr(startIndex, endIndex - startIndex);\r\n};\r\n"]}